@model PiranaSecuritySystem.Models.RosterViewModel

@{
    ViewBag.Title = "Create Shift Roster";
}

<h2>Create Shift Roster</h2>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" style="background-color: #f8d7da; border-color: #f5c6cb; color: #721c24;">@TempData["ErrorMessage"]</div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" style="background-color: #d4edda; border-color: #c3e6cb; color: #155724;">@TempData["SuccessMessage"]</div>
}

@using (Html.BeginForm("Create", "ShiftRoster", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group" style="margin-bottom: 20px;">
            @Html.LabelFor(model => model.RosterDate, htmlAttributes: new { @class = "control-label col-md-2", style = "font-weight: 600; color: #2c3e50;" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RosterDate, new { htmlAttributes = new { @class = "form-control", type = "date", style = "border: 1px solid #3498db; border-radius: 4px;" } })
                @Html.ValidationMessageFor(model => model.RosterDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="margin-bottom: 20px;">
            @Html.LabelFor(model => model.Site, htmlAttributes: new { @class = "control-label col-md-2", style = "font-weight: 600; color: #2c3e50;" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Site, ViewBag.Sites as SelectList, "-- Select Site --", new { @class = "form-control", id = "siteDropdown", required = "required", style = "border: 1px solid #3498db; border-radius: 4px;" })
                @Html.ValidationMessageFor(model => model.Site, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="margin-bottom: 20px;">
            <label class="control-label col-md-2" style="font-weight: 600; color: #2c3e50;">Available Guards</label>
            <div class="col-md-10">
                <div id="guardsContainer" style="max-height: 300px; overflow-y: auto; border: 1px solid #3498db; border-radius: 4px; padding: 10px; display: none; background-color: white;">
                    <div id="guardsLoading" style="display: none; text-align: center; padding: 10px; color: #3498db;">Loading guards...</div>
                    <div id="guardsList"></div>
                </div>
                <small class="text-muted" style="color: #7f8c8d;">Select exactly 12 guards</small>
                <span id="selectedCount" class="badge badge-warning" style="background-color: #f39c12; color: white; padding: 5px 10px; border-radius: 12px;">0 selected</span>
                <span id="selectionError" class="text-danger" style="display: none;"></span>
                @Html.HiddenFor(model => model.SelectedGuardIds, new { id = "selectedGuardIds" })
            </div>
        </div>

        <div class="form-group" style="margin-top: 30px;">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Generate Roster" class="btn btn-primary" id="submitBtn" style="background-color: #3498db; border-color: #3498db; padding: 8px 20px; border-radius: 4px;" />
                @Html.ActionLink("Cancel", "Index", "ShiftRoster", null, new { @class = "btn btn-default", style = "background-color: #95a5a6; border-color: #95a5a6; color: white; padding: 8px 20px; border-radius: 4px; margin-left: 10px;" })
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#siteDropdown').change(function () {
                var site = $(this).val();
                var container = $('#guardsContainer');
                var list = $('#guardsList');
                var loading = $('#guardsLoading');

                if (site) {
                    container.show();
                    list.empty();
                    loading.show();
                    $('#selectionError').hide();
                    $('#selectedGuardIds').val('');
                    updateCount();

                    console.log('Loading guards for site:', site);

                    $.post('@Url.Action("GetGuardsBySite", "ShiftRoster")', { site: site })
                        .done(function (response) {
                            console.log('Response:', response);
                            loading.hide();

                            if (response.success) {
                                if (response.guards.length > 0) {
                                    response.guards.forEach(function (guard) {
                                        var checkbox = '<div class="form-check" style="margin-bottom: 8px; padding: 5px; border-bottom: 1px solid #ecf0f1;">' +
                                            '<input class="form-check-input guard-checkbox" type="checkbox" value="' + guard.id + '" id="guard' + guard.id + '" style="margin-right: 10px;">' +
                                            '<label class="form-check-label" for="guard' + guard.id + '" style="color: #2c3e50;">' + guard.name + ' (PSIRA: ' + guard.badge + ')</label>' +
                                            '</div>';
                                        list.append(checkbox);
                                    });
                                } else {
                                    list.html('<p class="text-muted" style="color: #7f8c8d; text-align: center; padding: 20px;">No active guards found for this site.</p>');
                                }
                            } else {
                                list.html('<p class="text-danger" style="color: #e74c3c; text-align: center; padding: 20px;">' + response.message + '</p>');
                            }
                        })
                        .fail(function (xhr, status, error) {
                            loading.hide();
                            list.html('<p class="text-danger" style="color: #e74c3c; text-align: center; padding: 20px;">Error loading guards. Please try again.</p>');
                            console.log('Error details:', error);
                        });
                } else {
                    container.hide();
                    list.empty();
                    $('#selectedGuardIds').val('');
                    updateCount();
                }
            });

            $(document).on('change', '.guard-checkbox', function () {
                updateSelectedIds();
                updateCount();
            });

            function updateSelectedIds() {
                var selectedIds = [];
                $('.guard-checkbox:checked').each(function () {
                    selectedIds.push($(this).val());
                });
                $('#selectedGuardIds').val(selectedIds.join(','));
            }

            function updateCount() {
                var count = $('.guard-checkbox:checked').length;
                $('#selectedCount').text(count + ' selected');

                if (count === 12) {
                    $('#selectedCount').css('background-color', '#27ae60');
                    $('#selectionError').hide();
                } else if (count > 12) {
                    $('#selectedCount').css('background-color', '#e74c3c');
                    $('#selectionError').text('Too many guards selected. Please select exactly 12.').show();
                } else {
                    $('#selectedCount').css('background-color', '#f39c12');
                    $('#selectionError').hide();
                }
            }

            $('form').submit(function (e) {
                var count = $('.guard-checkbox:checked').length;
                if (count !== 12) {
                    e.preventDefault();
                    $('#selectionError').text('Please select exactly 12 guards. Currently selected: ' + count).show();
                    return false;
                }

                // Ensure the hidden field has the latest values
                updateSelectedIds();
            });
        });
    </script>
}