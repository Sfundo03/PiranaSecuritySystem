@model PiranaSecuritySystem.Models.RosterViewModel

@{
    ViewBag.Title = "Create Shift Roster";
}

<h2>Create Shift Roster</h2>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}

@using (Html.BeginForm("GenerateRoster", "Instructor", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.RosterDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RosterDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.RosterDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Site, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Site, ViewBag.Sites as SelectList, "-- Select Site --", new { @class = "form-control", id = "siteDropdown", required = "required" })
                @Html.ValidationMessageFor(model => model.Site, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Available Guards</label>
            <div class="col-md-10">
                <div id="guardsContainer" style="max-height: 300px; overflow-y: auto; border: 1px solid #ccc; border-radius: 4px; padding: 10px; display: none;">
                    <div id="guardsLoading" style="display: none; text-align: center; padding: 10px;">Loading guards...</div>
                    <div id="guardsList"></div>
                </div>
                <small class="text-muted">Select exactly 12 guards</small>
                <span id="selectedCount" class="badge badge-warning">0 selected</span>
                <span id="selectionError" class="text-danger" style="display: none;"></span>
                @Html.HiddenFor(model => model.SelectedGuardIds, new { id = "selectedGuardIds" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Generate Roster" class="btn btn-primary" id="submitBtn" />
                @Html.ActionLink("Cancel", "Dashboard", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#siteDropdown').change(function () {
                var site = $(this).val();
                var container = $('#guardsContainer');
                var list = $('#guardsList');
                var loading = $('#guardsLoading');

                if (site) {
                    container.show();
                    list.empty();
                    loading.show();
                    $('#selectionError').hide();
                    $('#selectedGuardIds').val('');
                    updateCount();

                    $.post('@Url.Action("GetGuardsBySite", "Instructor")', { site: site })
                        .done(function (response) {
                            loading.hide();
                            if (response.success) {
                                if (response.guards.length > 0) {
                                    response.guards.forEach(function (guard) {
                                        var checkbox = '<div class="form-check">' +
                                            '<input class="form-check-input guard-checkbox" type="checkbox" value="' + guard.id + '" id="guard' + guard.id + '">' +
                                            '<label class="form-check-label" for="guard' + guard.id + '">' + guard.name + ' (Badge: ' + guard.badge + ')</label>' +
                                            '</div>';
                                        list.append(checkbox);
                                    });
                                } else {
                                    list.html('<p class="text-muted">No active guards found for this site.</p>');
                                }
                            } else {
                                list.html('<p class="text-danger">' + response.message + '</p>');
                            }
                        })
                        .fail(function () {
                            loading.hide();
                            list.html('<p class="text-danger">Error loading guards. Please try again.</p>');
                        });
                } else {
                    container.hide();
                    list.empty();
                    $('#selectedGuardIds').val('');
                    updateCount();
                }
            });

            $(document).on('change', '.guard-checkbox', function () {
                updateSelectedIds();
                updateCount();
            });

            function updateSelectedIds() {
                var selectedIds = [];
                $('.guard-checkbox:checked').each(function () {
                    selectedIds.push($(this).val());
                });
                $('#selectedGuardIds').val(selectedIds.join(','));
            }

            function updateCount() {
                var count = $('.guard-checkbox:checked').length;
                $('#selectedCount').text(count + ' selected');

                if (count === 12) {
                    $('#selectedCount').removeClass('badge-warning').addClass('badge-success');
                    $('#selectionError').hide();
                } else if (count > 12) {
                    $('#selectedCount').removeClass('badge-warning').addClass('badge-danger');
                    $('#selectionError').text('Too many guards selected. Please select exactly 12.').show();
                } else {
                    $('#selectedCount').removeClass('badge-success badge-danger').addClass('badge-warning');
                    $('#selectionError').hide();
                }
            }

            $('form').submit(function (e) {
                var count = $('.guard-checkbox:checked').length;
                if (count !== 12) {
                    e.preventDefault();
                    $('#selectionError').text('Please select exactly 12 guards. Currently selected: ' + count).show();
                    return false;
                }
                updateSelectedIds();
                return true;
            });
        });
    </script>
}