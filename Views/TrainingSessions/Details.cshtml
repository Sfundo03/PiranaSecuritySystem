@model PiranaSecuritySystem.Models.TrainingSession

@{
    ViewBag.Title = "Training Session Details";
}

<style>
    .container-fluid {
        max-width: 1200px;
        margin: 0 auto;
        padding: 40px 20px;
    }

    .card {
        border: none;
        border-radius: 12px;
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
        background: #fff;
        margin-bottom: 30px;
        transition: all 0.3s ease;
    }

        .card:hover {
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
            transform: translateY(-2px);
        }

    .card-header {
        background: linear-gradient(135deg, #2c3e50, #34495e);
        color: white;
        border-bottom: none;
        padding: 25px 30px;
        border-radius: 12px 12px 0 0 !important;
        position: relative;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

        .card-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: linear-gradient(90deg, #3498db, #1abc9c);
        }

        .card-header h4 {
            font-weight: 600;
            margin: 0;
            font-size: 1.8rem;
            letter-spacing: -0.5px;
            display: flex;
            align-items: center;
        }

            .card-header h4:before {
                content: '';
                width: 4px;
                height: 24px;
                background: linear-gradient(135deg, #3498db, #1abc9c);
                margin-right: 12px;
                border-radius: 2px;
            }

    .card-body {
        padding: 35px;
    }

    .detail-section {
        margin-bottom: 30px;
        padding-bottom: 25px;
        border-bottom: 1px solid #e9ecef;
    }

        .detail-section:last-child {
            border-bottom: none;
            margin-bottom: 0;
        }

    .section-title {
        font-size: 1.4rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 2px solid #3498db;
        display: flex;
        align-items: center;
    }

        .section-title i {
            margin-right: 10px;
            color: #3498db;
        }

    .detail-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
        margin-bottom: 15px;
    }

    .detail-item {
        margin-bottom: 15px;
    }

    .detail-label {
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 5px;
        font-size: 14px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        display: block;
    }

    .detail-value {
        font-size: 16px;
        color: #495057;
        padding: 10px 0;
        border-bottom: 1px solid #f8f9fa;
    }

    .badge {
        font-size: 12px;
        padding: 6px 12px;
        border-radius: 20px;
        font-weight: 600;
    }

    .badge-primary {
        background: linear-gradient(135deg, #3498db, #2980b9);
    }

    .badge-success {
        background: linear-gradient(135deg, #27ae60, #229954);
    }

    .badge-warning {
        background: linear-gradient(135deg, #f39c12, #e67e22);
    }

    .badge-info {
        background: linear-gradient(135deg, #17a2b8, #138496);
    }

    .guards-list {
        max-height: 400px;
        overflow-y: auto;
        border: 2px solid #e9ecef;
        border-radius: 8px;
        padding: 20px;
        background: #f8f9fa;
    }

    .guard-item {
        background: white;
        padding: 15px;
        border-radius: 8px;
        border: 1px solid #e9ecef;
        margin-bottom: 10px;
        transition: all 0.3s ease;
        display: flex;
        justify-content: between;
        align-items: center;
    }

        .guard-item:hover {
            border-color: #3498db;
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

    .guard-info {
        flex: 1;
    }

    .guard-name {
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 5px;
    }

    .guard-badge {
        font-size: 12px;
        color: #6c757d;
        background: #e9ecef;
        padding: 3px 8px;
        border-radius: 4px;
        display: inline-block;
    }

    .no-guards {
        text-align: center;
        color: #6c757d;
        padding: 40px 20px;
        font-style: italic;
    }

    .session-status {
        display: inline-flex;
        align-items: center;
        padding: 8px 16px;
        border-radius: 20px;
        font-weight: 600;
        font-size: 14px;
    }

    .status-upcoming {
        background: linear-gradient(135deg, #3498db, #2980b9);
        color: white;
    }

    .status-in-progress {
        background: linear-gradient(135deg, #f39c12, #e67e22);
        color: white;
    }

    .status-completed {
        background: linear-gradient(135deg, #27ae60, #229954);
        color: white;
    }

    .status-cancelled {
        background: linear-gradient(135deg, #e74c3c, #c0392b);
        color: white;
    }

    .btn {
        border: none;
        border-radius: 8px;
        padding: 12px 25px;
        font-weight: 600;
        font-size: 15px;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        margin-right: 10px;
        margin-bottom: 10px;
    }

    .btn-primary {
        background: linear-gradient(135deg, #3498db, #2980b9);
        color: white;
        box-shadow: 0 4px 15px rgba(52, 152, 219, 0.3);
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(52, 152, 219, 0.4);
            background: linear-gradient(135deg, #2980b9, #3498db);
            color: white;
        }

    .btn-warning {
        background: linear-gradient(135deg, #f39c12, #e67e22);
        color: white;
        box-shadow: 0 4px 15px rgba(243, 156, 18, 0.3);
    }

        .btn-warning:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(243, 156, 18, 0.4);
            background: linear-gradient(135deg, #e67e22, #f39c12);
            color: white;
        }

    .btn-outline-secondary {
        background: transparent;
        border: 2px solid #95a5a6;
        color: #95a5a6;
    }

        .btn-outline-secondary:hover {
            background: #95a5a6;
            color: white;
            transform: translateY(-2px);
        }

    .btn-outline-light {
        background: transparent;
        border: 2px solid white;
        color: white;
    }

        .btn-outline-light:hover {
            background: white;
            color: #2c3e50;
            transform: translateY(-2px);
        }

    .btn-danger {
        background: linear-gradient(135deg, #e74c3c, #c0392b);
        color: white;
        box-shadow: 0 4px 15px rgba(231, 76, 60, 0.3);
    }

        .btn-danger:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(231, 76, 60, 0.4);
            background: linear-gradient(135deg, #c0392b, #e74c3c);
            color: white;
        }

    .action-buttons {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin-top: 30px;
        padding-top: 20px;
        border-top: 1px solid #e9ecef;
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .container-fluid {
            padding: 20px 15px;
        }

        .card-body {
            padding: 25px 20px;
        }

        .card-header {
            padding: 20px 25px;
            flex-direction: column;
            gap: 15px;
        }

            .card-header h4 {
                font-size: 1.5rem;
            }

        .detail-grid {
            grid-template-columns: 1fr;
        }

        .btn {
            width: 100%;
            margin-right: 0;
        }

        .action-buttons {
            flex-direction: column;
        }
    }
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="mb-0">
                        <i class="fas fa-info-circle me-2"></i>@ViewBag.Title
                    </h4>
                    @Html.ActionLink("Back to Dashboard", "Dashboard", "Instructor", null, new { @class = "btn btn-outline-light btn-sm" })
                </div>
                <div class="card-body">
                    <!-- Session Information Section -->
                    <div class="detail-section">
                        <h5 class="section-title">
                            <i class="fas fa-calendar-alt"></i>Session Information
                        </h5>
                        <div class="detail-grid">
                            <div class="detail-item">
                                <span class="detail-label">Session Title</span>
                                <div class="detail-value">@Model.Title</div>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Session Status</span>
                                <div class="detail-value">
                                    @{
                                        var status = "";
                                        var statusClass = "";
                                        if (DateTime.Now < Model.StartDate)
                                        {
                                            status = "Upcoming";
                                            statusClass = "status-upcoming";
                                        }
                                        else if (DateTime.Now >= Model.StartDate && DateTime.Now <= Model.EndDate)
                                        {
                                            status = "In Progress";
                                            statusClass = "status-in-progress";
                                        }
                                        else if (DateTime.Now > Model.EndDate)
                                        {
                                            status = "Completed";
                                            statusClass = "status-completed";
                                        }
                                    }
                                    <span class="session-status @statusClass">@status</span>
                                </div>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Site Location</span>
                                <div class="detail-value">
                                    <span class="badge badge-primary">@Model.Site</span>
                                </div>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Session ID</span>
                                <div class="detail-value">#@Model.Id</div>
                            </div>
                        </div>
                    </div>

                    <!-- Schedule Section -->
                    <div class="detail-section">
                        <h5 class="section-title">
                            <i class="fas fa-clock"></i>Schedule & Timing
                        </h5>
                        <div class="detail-grid">
                            <div class="detail-item">
                                <span class="detail-label">Start Date & Time</span>
                                <div class="detail-value">
                                    <i class="fas fa-play-circle me-2 text-success"></i>
                                    @Model.StartDate.ToString("dddd, MMMM dd, yyyy 'at' hh:mm tt")
                                </div>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">End Date & Time</span>
                                <div class="detail-value">
                                    <i class="fas fa-stop-circle me-2 text-danger"></i>
                                    @Model.EndDate.ToString("dddd, MMMM dd, yyyy 'at' hh:mm tt")
                                </div>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Duration</span>
                                <div class="detail-value">
                                    @{
                                        var duration = Model.EndDate - Model.StartDate;
                                        var hours = duration.TotalHours;
                                        var minutes = duration.TotalMinutes;
                                    }
                                    <i class="fas fa-hourglass-half me-2 text-info"></i>
                                    @hours.ToString("0.0") hours (@minutes minutes)
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Attendance Section -->
                    <div class="detail-section">
                        <h5 class="section-title">
                            <i class="fas fa-users"></i>Attendance Information
                        </h5>
                        <div class="detail-grid">
                            <div class="detail-item">
                                <span class="detail-label">Total Capacity</span>
                                <div class="detail-value">
                                    <i class="fas fa-user-friends me-2 text-primary"></i>
                                    @Model.Capacity guards
                                </div>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Enrollment Rate</span>
                                <div class="detail-value">
                                    @{
                                        var enrollmentRate = Model.Capacity > 0 ? 100 : 0;
                                    }
                                    <i class="fas fa-chart-line me-2 text-success"></i>
                                    @enrollmentRate% filled
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Enrolled Guards Section -->
                    <div class="detail-section">
                        <h5 class="section-title">
                            <i class="fas fa-id-card"></i>Enrolled Guards
                        </h5>
                        <div class="guards-list">
                            @if (Model.Enrollments != null && Model.Enrollments.Any())
                            {
                                foreach (var enrollment in Model.Enrollments)
                                {
                                    <div class="guard-item">
                                        <div class="guard-info">
                                            <div class="guard-name">
                                                @enrollment.Guard.Guard_FName @enrollment.Guard.Guard_LName
                                            </div>
                                            <div class="guard-badge">
                                                PSIRA: @(enrollment.Guard.PSIRAnumber ?? "N/A") |
                                                ID: @enrollment.Guard.GuardId
                                            </div>
                                        </div>
                                        <div class="enrollment-date">
                                            <small class="text-muted">
                                                Enrolled: @enrollment.EnrollmentDate.ToString("MMM dd, yyyy")
                                            </small>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="no-guards">
                                    <i class="fas fa-users-slash fa-3x mb-3"></i>
                                    <p>No guards are enrolled in this training session.</p>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="action-buttons">
                        @Html.ActionLink("Edit Session", "Edit", new { id = Model.Id }, new { @class = "btn btn-warning" })
                        @Html.ActionLink("Delete Session", "Delete", new { id = Model.Id }, new { @class = "btn btn-danger" })
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-outline-secondary" })
                        @Html.ActionLink("Back to Dashboard", "Dashboard", "Instructor", null, new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Add any additional JavaScript functionality here if needed
            console.log('Training session details loaded for session: @Model.Title');
        });
    </script>
}