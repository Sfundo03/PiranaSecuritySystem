@model PiranaSecuritySystem.Controllers.RegisterResidentViewModel

@{
    ViewBag.Title = "Register - Resident Portal";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .resident-register {
        min-height: 100vh;
        background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
        padding: 40px 20px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .register-container {
        max-width: 600px;
        width: 100%;
        margin: 0 auto;
    }

    .register-card {
        background: rgba(255, 255, 255, 0.95);
        border-radius: 12px;
        padding: 40px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
        backdrop-filter: blur(15px);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .register-header {
        text-align: center;
        margin-bottom: 35px;
        padding-bottom: 20px;
        border-bottom: 2px solid #e9ecef;
    }

        .register-header h2 {
            font-size: 2.2rem;
            margin-bottom: 10px;
            color: #2c3e50;
            font-weight: 700;
            letter-spacing: -0.5px;
        }

        .register-header p {
            color: #6c757d;
            font-size: 1.1rem;
            margin: 0;
            opacity: 0.9;
        }

    .form-group {
        margin-bottom: 25px;
        position: relative;
    }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #2c3e50;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

    .form-control {
        width: 100%;
        padding: 14px 16px;
        border: 2px solid #e9ecef;
        border-radius: 8px;
        background: #fff;
        font-size: 15px;
        transition: all 0.3s ease;
        color: #495057;
    }

        .form-control:focus {
            border-color: #3498db;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
            background: #fff;
        }

        .form-control::placeholder {
            color: #adb5bd;
            opacity: 0.8;
        }

    .validation-error {
        color: #e74c3c;
        font-size: 13px;
        margin-top: 6px;
        font-weight: 500;
        display: block;
    }

    .alert {
        padding: 16px 20px;
        border-radius: 8px;
        margin-bottom: 25px;
        border: none;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .alert-danger {
        background: linear-gradient(135deg, #f8d7da, #f5c6cb);
        color: #721c24;
        border-left: 4px solid #dc3545;
    }

    .btn-register {
        background: linear-gradient(135deg, #3498db, #2980b9);
        color: white;
        padding: 16px;
        border: none;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        width: 100%;
        margin-bottom: 20px;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(52, 152, 219, 0.3);
        letter-spacing: 0.5px;
    }

        .btn-register:hover {
            background: linear-gradient(135deg, #2980b9, #3498db);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(52, 152, 219, 0.4);
        }

    .btn-login {
        background: linear-gradient(135deg, #95a5a6, #7f8c8d);
        color: white;
        padding: 16px;
        border: none;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        width: 100%;
        text-decoration: none;
        display: block;
        text-align: center;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(149, 165, 166, 0.3);
        letter-spacing: 0.5px;
    }

        .btn-login:hover {
            background: linear-gradient(135deg, #7f8c8d, #95a5a6);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(149, 165, 166, 0.4);
            color: white;
            text-decoration: none;
        }

    .form-row {
        display: flex;
        gap: 20px;
        margin-bottom: 25px;
    }

        .form-row .form-group {
            flex: 1;
            margin-bottom: 0;
        }

    /* Animation for form elements */
    .form-group {
        animation: fadeInUp 0.5s ease-out;
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .resident-register {
            padding: 20px 15px;
        }

        .register-card {
            padding: 30px 25px;
        }

        .register-header h2 {
            font-size: 1.8rem;
        }

        .form-row {
            flex-direction: column;
            gap: 0;
        }

        .form-control {
            padding: 12px 14px;
        }
    }

    @@media (max-width: 480px) {
        .register-card {
            padding: 25px 20px;
        }

        .register-header h2 {
            font-size: 1.6rem;
        }

        .btn-register, .btn-login {
            padding: 14px;
            font-size: 15px;
        }
    }

    /* Success state for valid fields */
    .form-control:valid {
        border-color: #1abc9c;
    }

    /* Focus animation */
    .form-control:focus {
        animation: pulse 0.3s ease;
    }

    @@keyframes pulse {
        0% {
            box-shadow: 0 0 0 0 rgba(52, 152, 219, 0.3);
        }

        70% {
            box-shadow: 0 0 0 6px rgba(52, 152, 219, 0);
        }

        100% {
            box-shadow: 0 0 0 0 rgba(52, 152, 219, 0);
        }
    }
</style>

<div class="resident-register">
    <div class="register-container">
        <div class="register-card">
            <div class="register-header">
                <h2>Create Account</h2>
                <p>Register for resident portal access</p>
            </div>

            @if (ViewBag.ErrorMessage != null)
            {
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    @ViewBag.ErrorMessage
                </div>
            }

            @using (Html.BeginForm("Register", "Resident", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="form-row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FullName)
                        @Html.TextBoxFor(model => model.FullName, new { @class = "form-control", placeholder = "Enter your full name", required = "required" })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "validation-error" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email)
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", type = "email", placeholder = "Enter your email", required = "required" })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "validation-error" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PhoneNumber)
                        @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control", placeholder = "Enter your phone number", required = "required" })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "validation-error" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UnitNumber)
                        @Html.TextBoxFor(model => model.UnitNumber, new { @class = "form-control", placeholder = "Enter your unit number", required = "required" })
                        @Html.ValidationMessageFor(model => model.UnitNumber, "", new { @class = "validation-error" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address)
                    @Html.TextBoxFor(model => model.Address, new { @class = "form-control", placeholder = "Enter your address", required = "required" })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "validation-error" })
                </div>

                <div class="form-row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password)
                        @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Create a password (min. 6 characters)", required = "required", minlength = "6" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "validation-error" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword)
                        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm your password", required = "required", minlength = "6" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "validation-error" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmergencyContact)
                    @Html.TextBoxFor(model => model.EmergencyContact, new { @class = "form-control", placeholder = "Emergency contact (optional)" })
                    @Html.ValidationMessageFor(model => model.EmergencyContact, "", new { @class = "validation-error" })
                </div>

                <button type="submit" class="btn-register">
                    <i class="fas fa-user-plus me-2"></i>Create Account
                </button>
            }

            <a href="@Url.Action("Login", "Account")" class="btn-login">
                <i class="fas fa-arrow-left me-2"></i>Back to Login
            </a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Add real-time validation feedback
            $('.form-control').on('blur', function () {
                if ($(this).val().trim() !== '') {
                    $(this).addClass('valid');
                } else {
                    $(this).removeClass('valid');
                }
            });

            // Password confirmation validation
            $('#ConfirmPassword').on('keyup', function () {
                var password = $('#Password').val();
                var confirmPassword = $(this).val();

                if (confirmPassword !== '' && password !== confirmPassword) {
                    $(this).addClass('invalid');
                } else {
                    $(this).removeClass('invalid');
                }
            });
        });
    </script>
}
