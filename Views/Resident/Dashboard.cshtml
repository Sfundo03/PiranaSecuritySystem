@model PiranaSecuritySystem.Controllers.ResidentDashboardViewModel

@{
    ViewBag.Title = "Resident Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.FullPageLayout = true;

    // Get notifications from ViewModel
    var notifications = Model.Notifications ?? new List<PiranaSecuritySystem.Models.Notification>();
    var unreadCount = notifications.Count(n => !n.IsRead);
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pirana Guarding - Resident Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            /* Enhanced Professional Color Scheme for Security */
            --primary-blue: #003366;      /* Deep navy blue for trust & professionalism */
            --secondary-blue: #00509E;    /* Medium blue for accents */
            --accent-gold: #FFCC00;       /* Gold for important actions & alerts */
            --light-bg: #f8fafc;          /* Light background */
            --card-bg: #ffffff;           /* Card background */
            --dark-text: #2c3e50;         /* Main text color */
            --light-text: #64748b;        /* Secondary text */
            --border-color: #e2e8f0;      /* Borders */
            --success-color: #27ae60;     /* Success states */
            --warning-color: #e67e22;     /* Warning states */
            --danger-color: #e74c3c;      /* Danger/Error states */
        }

        body {
            background: linear-gradient(135deg, var(--light-bg) 0%, #f1f5f9 100%);
            min-height: 100vh;
            font-family: 'Inter', 'Segoe UI', system-ui, sans-serif;
            padding: 20px 0;
            color: var(--dark-text);
            line-height: 1.6;
        }

        .dashboard-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        /* Enhanced Dashboard Header with Security Badge */
        .dashboard-header {
            background: linear-gradient(135deg, var(--primary-blue) 0%, var(--secondary-blue) 100%);
            color: white;
            padding: 30px;
            border-radius: 12px;
            margin-bottom: 30px;
            box-shadow: 0 8px 32px rgba(0, 104, 170, 0.15);
            position: relative;
            overflow: hidden;
        }

        .dashboard-header::before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            width: 200px;
            height: 200px;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 70%);
        }

        .security-badge {
            background: linear-gradient(135deg, var(--accent-gold), #e67e22);
            color: var(--primary-blue);
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 6px;
            margin-bottom: 15px;
        }

        .dashboard-card {
            background: var(--card-bg);
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            overflow: hidden;
            margin-bottom: 30px;
            border: 1px solid var(--border-color);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .dashboard-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
        }

        .card-header-custom {
            background: linear-gradient(135deg, var(--primary-blue) 0%, var(--secondary-blue) 100%);
            color: white;
            padding: 25px;
            border-bottom: none;
            position: relative;
        }

        .card-header-custom::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 3px;
            background: linear-gradient(90deg, var(--accent-gold), var(--secondary-blue));
        }

        .btn-custom {
            background: linear-gradient(135deg, var(--primary-blue), var(--secondary-blue));
            border: none;
            padding: 12px 28px;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
            color: white;
            box-shadow: 0 4px 15px rgba(0, 104, 170, 0.3);
            position: relative;
            overflow: hidden;
        }

        .btn-custom::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s;
        }

        .btn-custom:hover::before {
            left: 100%;
        }

        .btn-custom:hover {
            background: linear-gradient(135deg, var(--secondary-blue), var(--primary-blue));
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 104, 170, 0.4);
            color: white;
        }

        .welcome-section {
            background: linear-gradient(135deg, #e8f4ff 0%, #ffffff 100%);
            border-radius: 12px;
            padding: 30px;
            margin-bottom: 30px;
            border-left: 6px solid var(--primary-blue);
            box-shadow: 0 4px 15px rgba(0, 104, 170, 0.1);
            position: relative;
        }

        .welcome-section::before {
            content: '🛡️';
            position: absolute;
            top: 20px;
            right: 25px;
            font-size: 2rem;
            opacity: 0.1;
        }

        /* Enhanced Action Cards */
        .dashboard-actions {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 25px;
            margin-bottom: 40px;
        }

        .action-card {
            background: var(--card-bg);
            border-radius: 12px;
            padding: 35px 25px;
            text-align: center;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            transition: all 0.3s ease;
            cursor: pointer;
            border: 1px solid var(--border-color);
            position: relative;
            overflow: hidden;
        }

        .action-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(90deg, var(--primary-blue), var(--secondary-blue));
        }

        .action-card::after {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, transparent, rgba(0, 104, 170, 0.03), transparent);
            transform: rotate(45deg);
            transition: all 0.5s ease;
        }

        .action-card:hover::after {
            transform: rotate(45deg) translate(10px, 10px);
        }

        .action-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 12px 35px rgba(0, 104, 170, 0.15);
            border-color: var(--primary-blue);
        }

        .action-card i {
            font-size: 3rem;
            margin-bottom: 20px;
            background: linear-gradient(135deg, var(--primary-blue), var(--secondary-blue));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .action-card h3 {
            margin-bottom: 15px;
            color: var(--dark-text);
            font-weight: 700;
            font-size: 1.3rem;
        }

        .action-card p {
            margin-bottom: 20px;
            color: var(--light-text);
            line-height: 1.6;
            font-size: 0.95rem;
        }

        /* Enhanced Notification Styles - Fixed Visibility */
        .notification-bell .btn-outline-primary {
            border: 2px solid white;
            color: white;
            background: rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
        }

        .notification-bell .btn-outline-primary:hover {
            background: white;
            border-color: white;
            color: var(--primary-blue);
            transform: translateY(-2px);
        }

        .notification-dropdown {
            background: #ffffff !important;
            border: 1px solid var(--border-color);
            border-radius: 12px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
            display: none; /* Ensure it's hidden by default */
        }

        .notification-item {
            background: #ffffff !important;
            padding: 1rem;
            border-bottom: 1px solid var(--border-color);
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .notification-item.unread {
            background: #f0f7ff !important;
            border-left: 4px solid var(--primary-blue);
        }

        .notification-item:hover {
            background: #e3f2fd !important;
        }

        .notification-content {
            position: relative;
        }

        .notification-title {
            font-weight: 600;
            margin-bottom: 0.25rem;
            color: #1a1a1a; /* Darker for better contrast */
            font-size: 0.95rem;
        }

        .notification-message {
            margin-bottom: 0.5rem;
            color: #4a5568; /* Darker gray for better readability */
            font-size: 0.875rem;
            line-height: 1.4;
        }

        .notification-time {
            font-size: 0.75rem;
            color: #718096; /* Medium gray for time */
        }

        .notification-type {
            position: absolute;
            top: 0;
            right: 0;
            font-size: 0.75rem;
            padding: 0.25rem 0.5rem;
            color: white;
            border-radius: 4px;
        }

        .notification-header {
            background: #f8f9fa !important;
            border-bottom: 1px solid #e9ecef;
            padding: 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-weight: 600;
            color: #2d3748; /* Darker text for header */
        }

        .notification-footer {
            background: #f8f9fa !important;
            border-top: 1px solid #e9ecef;
            padding: 0.75rem;
            text-align: center;
        }

        .mark-all-read {
            font-size: 0.875rem;
            color: var(--primary-blue);
            text-decoration: none;
            cursor: pointer;
            font-weight: 500;
        }

        .mark-all-read:hover {
            text-decoration: underline;
            color: var(--secondary-blue);
        }

        /* Emergency Banner */
        .emergency-banner {
            background: linear-gradient(135deg, #dc3545, #e74c3c);
            color: white;
            padding: 20px;
            border-radius: 8px;
            text-align: center;
            margin: 25px 0;
            box-shadow: 0 4px 15px rgba(220, 53, 69, 0.3);
            border-left: 6px solid var(--accent-gold);
        }

        /* Security Status Indicator */
        .security-status {
            background: var(--card-bg);
            padding: 20px;
            border-radius: 8px;
            border: 2px solid var(--success-color);
            text-align: center;
            margin: 20px 0;
            box-shadow: 0 4px 15px rgba(39, 174, 96, 0.2);
        }

        .status-indicator {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            padding: 8px 16px;
            background: var(--success-color);
            color: white;
            border-radius: 20px;
            font-weight: 600;
        }

        /* Company Info Section - Two Column Layout */
        .company-info-section {
            background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
            border-radius: 12px;
            padding: 30px;
            margin: 30px 0;
            border: 1px solid var(--border-color);
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            align-items: start;
        }

        .services-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin: 20px 0;
        }

        .service-card {
            background: var(--card-bg);
            padding: 20px;
            border-radius: 8px;
            border-left: 4px solid var(--primary-blue);
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
            transition: transform 0.3s ease;
            text-align: center;
        }

        .service-card:hover {
            transform: translateY(-3px);
        }

        .service-icon {
            font-size: 2rem;
            margin-bottom: 10px;
        }

        .contact-info {
            display: flex;
            flex-direction: column;
            gap: 15px;
            margin: 20px 0;
        }

        .contact-item {
            background: var(--light-bg);
            padding: 15px;
            border-radius: 8px;
            border: 1px solid var(--border-color);
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .contact-icon {
            font-size: 1.5rem;
            width: 40px;
            text-align: center;
        }

        .contact-details {
            flex: 1;
        }

        .contact-details strong {
            display: block;
            margin-bottom: 5px;
            color: var(--dark-text);
        }

        .contact-details span {
            color: var(--light-text);
            font-size: 0.9rem;
        }

        /* Alert Enhancements */
        .alert-custom {
            border-radius: 8px;
            border: none;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            border-left: 6px solid;
        }

        .alert-success {
            border-left-color: var(--success-color);
            background: linear-gradient(135deg, #d4f8e8 0%, #ffffff 100%);
        }

        .alert-danger {
            border-left-color: var(--danger-color);
            background: linear-gradient(135deg, #fde8e6 0%, #ffffff 100%);
        }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .dashboard-container {
                padding: 0 15px;
            }

            .dashboard-actions {
                grid-template-columns: 1fr;
                gap: 20px;
            }

            .dashboard-header {
                padding: 20px;
            }

            .action-card {
                padding: 25px 20px;
            }

            .company-info-section {
                grid-template-columns: 1fr;
                gap: 20px;
            }

            .services-grid {
                grid-template-columns: 1fr;
            }

            .contact-item {
                flex-direction: column;
                text-align: center;
                gap: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <!-- Enhanced Page Header -->
        <div class="dashboard-header">
            <div class="security-badge">
                <i class="fas fa-shield-alt"></i>
                PSIRA Certified Security Services
            </div>
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h2 mb-2">Resident Security Dashboard</h1>
                    <p class="mb-0 opacity-75">24/7 Protected by Pirana Guarding</p>
                </div>

                <!-- Notification Bell - Fixed Visibility -->
                <div class="notification-bell">
                    <a href="#" id="residentNotificationBell" class="btn btn-outline-primary position-relative">
                        <i class="fas fa-bell"></i>
                        @if (unreadCount > 0)
                        {
                            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                @unreadCount
                                <span class="visually-hidden">unread notifications</span>
                            </span>
                        }
                    </a>
                    <div class="notification-dropdown" id="residentNotificationDropdown">
                        <div class="notification-header">
                            <span class="fw-bold">Security Notifications</span>
                            @if (unreadCount > 0)
                            {
                                <a href="#" class="mark-all-read" id="markAllAsRead">Mark all as read</a>
                            }
                        </div>
                        <div id="residentNotificationList">
                            @foreach (var notification in notifications.Take(10))
                            {
                                <div class="notification-item @(!notification.IsRead ? "unread" : "")"
                                     data-id="@notification.NotificationId"
                                     data-url="@(notification.RelatedUrl ?? "#")">
                                    <div class="notification-content">
                                        <div class="notification-title">@notification.Title</div>
                                        <div class="notification-message">@notification.Message</div>
                                        <div class="notification-time">@notification.CreatedAt.ToString("g")</div>
                                        @if (!string.IsNullOrEmpty(notification.NotificationType))
                                        {
                                            <span class="notification-type badge @GetNotificationTypeBadge(notification.NotificationType)">
                                                @notification.NotificationType
                                            </span>
                                        }
                                    </div>
                                </div>
                            }
                            @if (!notifications.Any())
                            {
                                <div class="notification-item text-center py-3">
                                    <i class="fas fa-bell-slash text-muted me-2"></i>
                                    No notifications
                                </div>
                            }
                            @if (notifications.Count > 10)
                            {
                                <div class="notification-footer text-center py-2">
                                    <a href="#" class="text-primary">View all notifications</a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="dashboard-card">
            <div class="card-header-custom">
                <div class="d-flex justify-content-between align-items-center">
                    <h2 class="mb-0"><i class="fas fa-home me-2"></i>Resident Dashboard</h2>
                    <div>
                        <span class="badge security-badge">
                            <i class="fas fa-user me-1"></i>@Model.Resident.FullName
                        </span>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="welcome-section">
                    <h4><i class="fas fa-user me-2"></i>Welcome, @Model.Resident.FullName!</h4>
                    <p class="mb-0">You have successfully logged in to the Pirana Guarding Security System resident portal. Your safety is our priority.</p>
                </div>

                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success alert-custom">
                        <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
                    </div>
                }

                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger alert-custom">
                        <i class="fas fa-exclamation-triangle me-2"></i>@TempData["ErrorMessage"]
                    </div>
                }

                <!-- Emergency Contact Banner -->
                <div class="emergency-banner">
                    <h3><i class="fas fa-phone-alt me-2"></i>24/7 Emergency Response</h3>
                    <p class="mb-2">Our security operations center is always active and ready to respond</p>
                    <div class="d-flex justify-content-center gap-3 mt-3">
                        <strong>Primary: 087 183 1585</strong>
                        <strong>Alternate: 062 072 5794</strong>
                    </div>
                </div>

                <div class="dashboard-actions">
                    <div class="action-card" onclick="window.location.href='@Url.Action("Profile", "Resident")'">
                        <i class="fas fa-user-circle"></i>
                        <h3>My Details</h3>
                        <p>View and update your personal information and emergency contacts</p>
                        <button class="btn btn-custom">Manage Profile</button>
                    </div>

                    <div class="action-card" onclick="window.location.href='@Url.Action("ReportIncident", "Resident")'">
                        <i class="fas fa-exclamation-triangle"></i>
                        <h3>Report Incident</h3>
                        <p>Report security concerns, suspicious activity, or emergency situations</p>
                        <button class="btn btn-custom">Report Now</button>
                    </div>

                    <div class="action-card" onclick="window.location.href='@Url.Action("MyIncidents", "Resident")'">
                        <i class="fas fa-clipboard-list"></i>
                        <h3>My Reports</h3>
                        <p>View status and updates on your submitted incident reports</p>
                        <button class="btn btn-custom">View Reports</button>
                    </div>
                </div>

                <!-- Company Information Section - Two Column Layout -->
                <div class="company-info-section">
                    <!-- Left Column - About & Services -->
                    <div class="company-about">
                        <h4><i class="fas fa-info-circle me-2"></i>About Pirana Guarding</h4>
                        <p>Pirana Guarding stands as a premier security service provider, offering professional, PSIRA-registered protection services backed by over 75 years of combined operational expertise in the security industry.</p>

                        <p>Established in 2019 by security veterans Douglas Benningfield and Welensky Mdluli, we specialize in comprehensive security solutions including Estate & Complex Security Management, 24/7 Control Room Operations, Advanced Remote Monitoring, and specialized Security Guard Training programs.</p>

                        <h5>Our Security Services</h5>
                        <div class="services-grid">
                            <div class="service-card">
                                <div class="service-icon">🏘️</div>
                                <h6>Estate Security</h6>
                                <p class="small mb-0">Comprehensive residential estate and complex security management with 24/7 patrols and access control.</p>
                            </div>
                            <div class="service-card">
                                <div class="service-icon">📡</div>
                                <h6>Remote Monitoring</h6>
                                <p class="small mb-0">Advanced 24/7 control room operations with real-time surveillance and rapid response capabilities.</p>
                            </div>
                            <div class="service-card">
                                <div class="service-icon">🎓</div>
                                <h6>Guard Training</h6>
                                <p class="small mb-0">Specialized security guard training programs meeting PSIRA standards and industry best practices.</p>
                            </div>
                            <div class="service-card">
                                <div class="service-icon">🔒</div>
                                <h6>Custom Solutions</h6>
                                <p class="small mb-0">Tailored security strategies designed to meet specific client requirements and risk profiles.</p>
                            </div>
                        </div>
                    </div>

                    <!-- Right Column - Contact Information -->
                    <div class="company-contact">
                        <h5><i class="fas fa-address-card me-2"></i>Contact Information</h5>

                        <div class="contact-info">
                            <div class="contact-item">
                                <div class="contact-icon">📞</div>
                                <div class="contact-details">
                                    <strong>Primary Contact</strong>
                                    <span>087 183 1585</span>
                                </div>
                            </div>
                            <div class="contact-item">
                                <div class="contact-icon">📱</div>
                                <div class="contact-details">
                                    <strong>Alternate Line</strong>
                                    <span>062 072 5794</span>
                                </div>
                            </div>
                            <div class="contact-item">
                                <div class="contact-icon">✉️</div>
                                <div class="contact-details">
                                    <strong>Email Address</strong>
                                    <span>douglas@piranaguarding.co.za</span>
                                </div>
                            </div>
                            <div class="contact-item">
                                <div class="contact-icon">🏢</div>
                                <div class="contact-details">
                                    <strong>Headquarters</strong>
                                    <span>Annie Street, Fontainebleau<br>Gauteng, 2032</span>
                                </div>
                            </div>
                        </div>

                        <div class="emergency-contact mt-4">
                            <h6><i class="fas fa-exclamation-triangle me-2"></i>Emergency Contact</h6>
                            <p class="small text-muted">For immediate security assistance, use our 24/7 emergency lines above. Our security operations center is always staffed with trained professionals ready to respond to your needs.</p>
                        </div>
                    </div>
                </div>

                <div style="text-align: center; margin-top: 30px;">
                    @using (Html.BeginForm("Logout", "Resident", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-custom">
                            <i class="fas fa-sign-out-alt me-2"></i>Logout
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            console.log("Pirana Guarding Resident dashboard loaded");

            // Notification bell functionality - FIXED: No auto-load on login
            $('#residentNotificationBell').click(function (e) {
                e.preventDefault();
                e.stopPropagation();
                $('#residentNotificationDropdown').toggle();
                // Removed auto-loadResidentNotifications() call to prevent auto-opening
            });

            // Close dropdown when clicking outside
            $(document).click(function (e) {
                if (!$(e.target).closest('.notification-bell').length) {
                    $('#residentNotificationDropdown').hide();
                }
            });

            // Mark notification as read and navigate when clicked
            $(document).on('click', '.notification-item', function (e) {
                e.preventDefault();
                var notificationId = $(this).data('id');
                var url = $(this).data('url');

                if (notificationId) {
                    markNotificationAsRead(notificationId);
                    $(this).removeClass('unread');

                    if (url && url !== '#') {
                        window.location.href = url;
                    }
                }
            });

            // Mark all as read
            $('#markAllAsRead').click(function (e) {
                e.preventDefault();
                e.stopPropagation();
                markAllNotificationsAsRead();
            });

            function loadResidentNotifications() {
                $.get('@Url.Action("GetNotifications", "Resident")', function (data) {
                    if (data.error) return console.error('Error loading notifications:', data.error);
                    updateNotificationUI(data);
                }).fail(function(xhr, status, error) {
                    console.error('Failed to load notifications:', error);
                });
            }

            function updateNotificationUI(data) {
                var notificationList = $('#residentNotificationList');
                notificationList.empty();

                if (data.notifications && data.notifications.length > 0) {
                    $.each(data.notifications, function (index, notification) {
                        var item = $('<div>').addClass('notification-item ' + (notification.IsRead ? '' : 'unread'))
                            .attr('data-id', notification.Id)
                            .attr('data-url', notification.RelatedUrl || '#')
                            .html('<div class="notification-content">' +
                                  '<div class="notification-title">' + (notification.Title || 'Notification') + '</div>' +
                                  '<div class="notification-message">' + notification.Message + '</div>' +
                                  '<div class="notification-time">' +
                                  new Date(notification.CreatedAt).toLocaleString() + '</div>' +
                                  (notification.Type ?
                                  '<span class="notification-type badge ' + getNotificationTypeClass(notification.Type) + '">' +
                                  notification.Type + '</span>' : '') +
                                  '</div>');

                        notificationList.append(item);
                    });

                    if (data.notifications.length > 10) {
                        notificationList.append('<div class="notification-footer text-center py-2">' +
                            '<a href="#" class="text-primary">View all notifications</a></div>');
                    }
                } else {
                    notificationList.append('<div class="notification-item text-center py-3">' +
                        '<i class="fas fa-bell-slash text-muted me-2"></i>No notifications</div>');
                }

                updateNotificationCount(data.unreadCount || 0);
            }

            function getNotificationTypeClass(type) {
                switch (type.toLowerCase()) {
                    case 'emergency': return 'bg-danger';
                    case 'security': return 'bg-warning';
                    case 'patrol': return 'bg-info';
                    case 'system': return 'bg-secondary';
                    case 'incident': return 'bg-danger';
                    default: return 'bg-primary';
                }
            }

            function updateNotificationCount(count) {
                var badge = $('#residentNotificationBell .badge');
                var markAllLink = $('#markAllAsRead');

                if (count > 0) {
                    badge.text(count).show();
                    markAllLink.show();
                } else {
                    badge.hide();
                    markAllLink.hide();
                }
            }

            function markNotificationAsRead(notificationId) {
                $.post('@Url.Action("MarkNotificationAsRead", "Resident")', { id: notificationId })
                    .done(function(response) {
                        if (response.success) {
                            var currentCount = parseInt($('#residentNotificationBell .badge').text()) || 0;
                            if (currentCount > 0) updateNotificationCount(currentCount - 1);
                        }
                    })
                    .fail(function() {
                        console.error('Failed to mark notification as read');
                    });
            }

            function markAllNotificationsAsRead() {
                $.post('@Url.Action("MarkAllNotificationsAsRead", "Resident")')
                    .done(function(response) {
                        if (response.success) {
                            $('.notification-item').removeClass('unread');
                            updateNotificationCount(0);
                            $('#residentNotificationDropdown').hide();
                        }
                    })
                    .fail(function() {
                        console.error('Failed to mark all notifications as read');
                    });
            }

            // Auto-hide alerts after 5 seconds
            if ('@TempData["SuccessMessage"]') {
                setTimeout(function () {
                    $('.alert-success').fadeOut('slow');
                }, 5000);
            }
            if ('@TempData["ErrorMessage"]') {
                setTimeout(function () {
                    $('.alert-danger').fadeOut('slow');
                }, 5000);
            }
        });
    </script>
</body>
</html>

@functions {
    public string GetNotificationTypeBadge(string type)
    {
        switch (type?.ToLower())
        {
            case "emergency": return "bg-danger";
            case "security": return "bg-warning";
            case "patrol": return "bg-info";
            case "system": return "bg-secondary";
            case "incident": return "bg-danger";
            default: return "bg-primary";
        }
    }
}