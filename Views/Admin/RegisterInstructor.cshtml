@model PiranaSecuritySystem.ViewModels.RegisterInstructorViewModel

@{
    ViewBag.Title = "Register New Instructor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PIRANA GUARDING - Register Instructor</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #3498db;
            --accent-color: #e74c3c;
            --light-color: #ecf0f1;
            --dark-color: #2c3e50;
        }

        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            padding: 20px 0;
            display: flex;
            align-items: center;
        }

        .form-container {
            max-width: 800px;
            width: 100%;
            margin: 0 auto;
        }

        .form-card {
            background: white;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            transition: transform 0.3s ease;
        }

            .form-card:hover {
                transform: translateY(-5px);
            }

        .card-header-custom {
            background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
            color: white;
            padding: 20px;
            border-bottom: none;
            text-align: center;
        }

        .card-body {
            padding: 30px;
        }

        .btn-custom {
            background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
            border: none;
            padding: 12px 30px;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s;
            color: white;
        }

            .btn-custom:hover {
                background: linear-gradient(to right, var(--secondary-color), var(--primary-color));
                transform: translateY(-2px);
                color: white;
            }

        .btn-outline-custom {
            background: transparent;
            border: 1px solid var(--secondary-color);
            color: var(--secondary-color);
            padding: 10px 20px;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s;
        }

            .btn-outline-custom:hover {
                background: var(--secondary-color);
                color: white;
                transform: translateY(-2px);
            }

        .form-control {
            padding: 12px 15px;
            border-radius: 8px;
            border: 1px solid #ddd;
            transition: all 0.3s;
        }

            .form-control:focus {
                border-color: var(--secondary-color);
                box-shadow: 0 0 0 0.25rem rgba(52, 152, 219, 0.25);
            }

        .input-icon {
            position: relative;
        }

            .input-icon i {
                position: absolute;
                left: 15px;
                top: 50%;
                transform: translateY(-50%);
                color: #7f8c8d;
            }

            .input-icon input {
                padding-left: 45px;
            }

        .floating-label {
            position: relative;
            margin-bottom: 20px;
        }

            .floating-label label {
                position: absolute;
                top: 12px;
                left: 45px;
                font-size: 14px;
                color: #7f8c8d;
                pointer-events: none;
                transition: 0.2s ease all;
            }

            .floating-label input:focus ~ label,
            .floating-label input:not(:placeholder-shown) ~ label {
                top: -10px;
                left: 40px;
                font-size: 12px;
                background: white;
                padding: 0 5px;
                color: var(--secondary-color);
            }

        .field-validation-error {
            color: #dc3545;
            font-size: 0.875rem;
        }
    </style>
</head>
<body>
    <div class="form-container">
        <div class="form-card">
            <div class="card-header-custom">
                <h2 class="mb-0"><i class="fas fa-chalkboard-teacher me-2"></i>Register New Instructor</h2>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("RegisterInstructor", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary("", new { @class = "text-danger" })

                    <div class="input-icon floating-label">
                        <i class="fas fa-id-card"></i>
                        @Html.TextBoxFor(m => m.EmployeeId, new { @class = "form-control", placeholder = "Enter employee ID" })
                        <label for="EmployeeId">Employee ID</label>
                        @Html.ValidationMessageFor(m => m.EmployeeId, "", new { @class = "text-danger" })
                    </div>

                    <div class="input-icon floating-label">
                        <i class="fas fa-user"></i>
                        @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", placeholder = "Enter full name" })
                        <label for="FullName">Full Name</label>
                        @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                    </div>

                    <div class="input-icon floating-label">
                        <i class="fas fa-envelope"></i>
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Enter email address", type = "email" })
                        <label for="Email">Email Address</label>
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>

                    <div class="input-icon floating-label">
                        <i class="fas fa-phone"></i>
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", placeholder = "Enter phone number" })
                        <label for="PhoneNumber">Phone Number</label>
                        @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                    </div>

                    <div class="input-icon floating-label">
                        <i class="fas fa-star"></i>
                        @Html.TextBoxFor(m => m.Specialization, new { @class = "form-control", placeholder = "Enter specialization" })
                        <label for="Specialization">Specialization</label>
                        @Html.ValidationMessageFor(m => m.Specialization, "", new { @class = "text-danger" })
                    </div>

                    <div class="input-icon floating-label">
                        <i class="fas fa-lock"></i>
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Enter password" })
                        <label for="Password">Password</label>
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>

                    <div class="input-icon floating-label">
                        <i class="fas fa-lock"></i>
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm password" })
                        <label for="ConfirmPassword">Confirm Password</label>
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group text-center mt-4">
                        <button type="submit" class="btn btn-custom me-2">
                            <i class="fas fa-user-plus me-2"></i>Register Instructor
                        </button>
                        @Html.ActionLink("Cancel", "Dashboard", null, new { @class = "btn btn-outline-custom" })
                    </div>
                }
            </div>
        </div>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</body>
</html>