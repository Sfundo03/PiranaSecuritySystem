@model PiranaSecuritySystem.Models.DashboardStats
@{
    ViewBag.Title = "Admin Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PIRANA GUARDING - Admin Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #3498db;
            --accent-color: #e74c3c;
            --light-color: #ecf0f1;
            --dark-color: #2c3e50;
        }

        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            padding: 20px 0;
        }

        .dashboard-container {
            max-width: 1200px;
            margin: 0 auto;
        }

        .dashboard-card {
            background: white;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            margin-bottom: 25px;
            transition: transform 0.3s ease;
        }

            .dashboard-card:hover {
                transform: translateY(-5px);
            }

        .card-header-custom {
            background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
            color: white;
            padding: 20px;
            border-bottom: none;
        }

        .stats-card {
            border-radius: 12px;
            overflow: hidden;
            border: none;
            transition: transform 0.3s ease;
        }

            .stats-card:hover {
                transform: translateY(-5px);
            }

        .btn-custom {
            background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
            border: none;
            padding: 12px 20px;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s;
            color: white;
        }

            .btn-custom:hover {
                background: linear-gradient(to right, var(--secondary-color), var(--primary-color));
                transform: translateY(-2px);
                color: white;
            }

        .btn-outline-custom {
            background: transparent;
            border: 1px solid var(--secondary-color);
            color: var(--secondary-color);
            padding: 10px 20px;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s;
        }

            .btn-outline-custom:hover {
                background: var(--secondary-color);
                color: white;
                transform: translateY(-2px);
            }

        .alert-custom {
            border-radius: 10px;
            border: none;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        h2, h4, h5 {
            color: var(--primary-color);
        }

        .welcome-section {
            background: linear-gradient(to right, #e3f2fd, #bbdefb);
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 25px;
        }

        /* Notification Styles - Updated to match Director Dashboard */
        .notification-bell {
            position: relative;
            display: inline-block;
        }

        .notification-dropdown {
            position: absolute;
            top: 100%;
            right: 0;
            width: 400px;
            max-height: 500px;
            overflow-y: auto;
            background: white;
            border: 1px solid #dee2e6;
            border-radius: 0.375rem;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            z-index: 1050;
            display: none;
        }

        .notification-item {
            padding: 1rem;
            border-bottom: 1px solid #e9ecef;
            cursor: pointer;
            transition: all 0.2s ease;
        }

            .notification-item.unread {
                background-color: #f8f9fa;
                border-left: 4px solid #007bff;
            }

            .notification-item:hover {
                background-color: #e3f2fd;
            }

        .notification-content {
            position: relative;
        }

        .notification-title {
            font-weight: 600;
            margin-bottom: 0.25rem;
            color: #212529;
            font-size: 0.95rem;
        }

        .notification-message {
            margin-bottom: 0.5rem;
            color: #495057;
            font-size: 0.875rem;
        }

        .notification-time {
            font-size: 0.75rem;
            color: #6c757d;
        }

        .notification-type {
            position: absolute;
            top: 0;
            right: 0;
            font-size: 0.75rem;
            padding: 0.25rem 0.5rem;
            color: white;
        }

        .notification-header {
            padding: 1rem;
            background-color: #f8f9fa;
            border-bottom: 1px solid #e9ecef;
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-weight: 600;
        }

        .mark-all-read {
            font-size: 0.875rem;
            color: #0d6efd;
            text-decoration: none;
            cursor: pointer;
        }

            .mark-all-read:hover {
                text-decoration: underline;
            }

        .notification-footer {
            padding: 0.75rem;
            background-color: #f8f9fa;
            border-top: 1px solid #e9ecef;
            text-align: center;
        }

        /* Additional badge colors for notification types */
        .bg-purple {
            background-color: #6f42c1 !important;
        }

        .bg-teal {
            background-color: #20c9a6 !important;
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <!-- Page Header with Notification Bell -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h1 class="h3 mb-1 text-gray-800">Admin Dashboard</h1>
                <p class="text-muted">Welcome to the security management system</p>
            </div>

            <!-- Notification Bell -->
            <div class="notification-bell">
                <a href="#" id="adminNotificationBell" class="btn btn-outline-primary position-relative">
                    <i class="fas fa-bell"></i>
                    @if (Model.UnreadNotificationCount > 0)
                    {
                        <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                            @Model.UnreadNotificationCount
                            <span class="visually-hidden">unread notifications</span>
                        </span>
                    }
                </a>
                <div class="notification-dropdown" id="adminNotificationDropdown">
                    <div class="notification-header">
                        <span class="fw-bold">All Notifications</span>
                        @if (Model.UnreadNotificationCount > 0)
                        {
                            <a href="#" class="mark-all-read" id="markAllAsRead">Mark all as read</a>
                        }
                    </div>
                    <div id="adminNotificationList">
                        @if (Model.Notifications != null && Model.Notifications.Any())
                        {
                            foreach (var notification in Model.Notifications.Take(10))
                            {
                                <div class="notification-item @(notification.IsRead ? "" : "unread")"
                                     data-id="@notification.Id"
                                     data-url="@Url.Action("NotificationDetails", "Admin", new { id = notification.Id })">
                                    <div class="notification-content">
                                        <div class="notification-title">@notification.Title</div>
                                        <div class="notification-message">@notification.Message</div>
                                        <div class="notification-time">@notification.CreatedAt.ToString("g")</div>
                                        @if (!string.IsNullOrEmpty(notification.NotificationType))
                                        {
                                            <span class="notification-type badge @GetNotificationTypeBadge(notification.NotificationType)">
                                                @notification.NotificationType
                                            </span>
                                        }
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="notification-item text-center py-3">
                                <i class="fas fa-bell-slash text-muted me-2"></i>
                                No notifications
                            </div>
                        }
                        @if (Model.Notifications != null && Model.Notifications.Count > 10)
                        {
                            <div class="notification-footer text-center py-2">
                                <a href="@Url.Action("Notifications", "Admin")" class="text-primary">View all notifications</a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="dashboard-card">
                    <div class="card-header-custom">
                        <div class="d-flex justify-content-between align-items-center">
                            <h2 class="mb-0"><i class="fas fa-tachometer-alt me-2"></i>Admin Dashboard</h2>
                            <div>
                                <span class="badge bg-light text-dark">
                                    <i class="fas fa-sync-alt me-1"></i>Last updated: @DateTime.Now.ToString("hh:mm tt")
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="welcome-section">
                            <h4><i class="fas fa-user-shield me-2"></i>Welcome, Administrator!</h4>
                            <p class="mb-0">You have successfully logged in to the Pirana Security System admin panel.</p>
                        </div>

                        @if (ViewBag.Error != null)
                        {
                            <div class="alert alert-warning alert-custom">
                                <i class="fas fa-exclamation-triangle me-2"></i>@ViewBag.Error
                            </div>
                        }

                        <!-- Quick Stats -->
                        <div class="row mb-4">
                            <div class="col-md-3 mb-3">
                                <div class="stats-card text-white bg-primary">
                                    <div class="card-body text-center">
                                        <h5 class="card-title"><i class="fas fa-shield-alt me-2"></i>Total Guards</h5>
                                        <p class="card-text display-4">@Model.TotalGuards</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3 mb-3">
                                <div class="stats-card text-white bg-success">
                                    <div class="card-body text-center">
                                        <h5 class="card-title"><i class="fas fa-user-check me-2"></i>Active Guards</h5>
                                        <p class="card-text display-4">@Model.ActiveGuards</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3 mb-3">
                                <div class="stats-card text-white bg-info">
                                    <div class="card-body text-center">
                                        <h5 class="card-title"><i class="fas fa-chalkboard-teacher me-2"></i>Total Instructors</h5>
                                        <p class="card-text display-4">@Model.TotalInstructors</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3 mb-3">
                                <div class="stats-card text-white bg-warning">
                                    <div class="card-body text-center">
                                        <h5 class="card-title"><i class="fas fa-user-graduate me-2"></i>Active Instructors</h5>
                                        <p class="card-text display-4">@Model.ActiveInstructors</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Payroll and Management Section -->
                        <div class="row mb-4">
                            <div class="col-md-12">
                                <div class="dashboard-card">
                                    <div class="card-body text-center">
                                        <h5 class="card-title"><i class="fas fa-money-check me-2"></i>Payroll Management</h5>
                                        <p class="card-text">Access and manage payroll information</p>
                                        @Html.ActionLink("Access Payroll", "Index", "Payroll", null, new { @class = "btn btn-custom" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Rest of your dashboard content -->
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <div class="dashboard-card">
                                    <div class="card-body text-center">
                                        <h5 class="card-title"><i class="fas fa-shield-alt me-2"></i>Guard Management</h5>
                                        <p class="card-text">Register and manage security guards</p>
                                        @Html.ActionLink("Manage Guards", "ManageGuards", null, new { @class = "btn btn-custom me-2" })
                                        @Html.ActionLink("Register Guard", "RegisterGuard", null, new { @class = "btn btn-outline-custom" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="dashboard-card">
                                    <div class="card-body text-center">
                                        <h5 class="card-title"><i class="fas fa-chalkboard-teacher me-2"></i>Instructor Management</h5>
                                        <p class="card-text">Register and manage instructors</p>
                                        @Html.ActionLink("Manage Instructors", "ManageInstructors", null, new { @class = "btn btn-custom me-2" })
                                        @Html.ActionLink("Register Instructor", "RegisterInstructor", null, new { @class = "btn btn-outline-custom" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            console.log("Admin dashboard loaded");

            // Notification bell functionality
            $('#adminNotificationBell').click(function (e) {
                e.preventDefault();
                e.stopPropagation();
                $('#adminNotificationDropdown').toggle();
                loadAdminNotifications();
            });

            // Close dropdown when clicking outside
            $(document).click(function (e) {
                if (!$(e.target).closest('.notification-bell').length) {
                    $('#adminNotificationDropdown').hide();
                }
            });

            // Mark notification as read and navigate when clicked
            $(document).on('click', '.notification-item', function (e) {
                e.preventDefault();
                var notificationId = $(this).data('id');
                var url = $(this).data('url');

                if (notificationId) {
                    markNotificationAsRead(notificationId);
                    $(this).removeClass('unread');

                    // Navigate to related URL if available
                    if (url && url !== '#') {
                        window.location.href = url;
                    }
                }
            });

            // Mark all as read
            $('#markAllAsRead').click(function (e) {
                e.preventDefault();
                e.stopPropagation();
                markAllNotificationsAsRead();
            });

            // Auto-refresh notifications every 30 seconds
            setInterval(loadAdminNotifications, 30000);

            // Load notifications function
            function loadAdminNotifications() {
                $.get('@Url.Action("GetNotifications", "Admin")', function (data) {
                    if (data.error) {
                        console.error('Error loading notifications:', data.error);
                        return;
                    }

                    updateNotificationUI(data);
                }).fail(function(xhr, status, error) {
                    console.error('Failed to load notifications:', error);
                });
            }

            function updateNotificationUI(data) {
                var notificationList = $('#adminNotificationList');
                notificationList.empty();

                if (data.notifications && data.notifications.length > 0) {
                    $.each(data.notifications, function (index, notification) {
                        var item = $('<div>').addClass('notification-item ' + (notification.IsRead ? '' : 'unread'))
                            .attr('data-id', notification.Id)
                            .attr('data-url', notification.RelatedUrl || '#')
                            .html('<div class="notification-content">' +
                                  '<div class="notification-title">' + (notification.Title || 'Notification') + '</div>' +
                                  '<div class="notification-message">' + notification.Message + '</div>' +
                                  '<div class="notification-time">' +
                                  new Date(notification.CreatedAt).toLocaleString() + '</div>' +
                                  (notification.Type ?
                                  '<span class="notification-type badge ' + getNotificationTypeClass(notification.Type) + '">' +
                                  notification.Type + '</span>' : '') +
                                  '</div>');

                        notificationList.append(item);
                    });

                    // Add view all link if there are more than 10 notifications
                    if (data.notifications.length > 10) {
                        notificationList.append('<div class="notification-footer text-center py-2">' +
                            '<a href="@Url.Action("Notifications", "Admin")" class="text-primary">View all notifications</a></div>');
                    }
                } else {
                    notificationList.append('<div class="notification-item text-center py-3">' +
                        '<i class="fas fa-bell-slash text-muted me-2"></i>No notifications</div>');
                }

                // Update notification count
                updateNotificationCount(data.unreadCount || 0);
            }

            function getNotificationTypeClass(type) {
                switch (type.toLowerCase()) {
                    case 'login': return 'bg-success';
                    case 'incident': return 'bg-danger';
                    case 'system': return 'bg-info';
                    case 'security': return 'bg-warning';
                    case 'guard': return 'bg-primary';
                    case 'instructor': return 'bg-purple';
                    case 'checkin': return 'bg-teal';
                    default: return 'bg-secondary';
                }
            }

            function updateNotificationCount(count) {
                var badge = $('#adminNotificationBell .badge');
                var markAllLink = $('#markAllAsRead');

                if (count > 0) {
                    badge.text(count).show();
                    markAllLink.show();
                } else {
                    badge.hide();
                    markAllLink.hide();
                }
            }

            function markNotificationAsRead(notificationId) {
                $.post('@Url.Action("MarkNotificationAsRead", "Admin")', { id: notificationId })
                    .done(function(response) {
                        if (response.success) {
                            // Update unread count
                            var currentCount = parseInt($('#adminNotificationBell .badge').text()) || 0;
                            if (currentCount > 0) {
                                updateNotificationCount(currentCount - 1);
                            }
                        }
                    })
                    .fail(function() {
                        console.error('Failed to mark notification as read');
                    });
            }

            function markAllNotificationsAsRead() {
                $.post('@Url.Action("MarkAllNotificationsAsRead", "Admin")')
                    .done(function(response) {
                        if (response.success) {
                            $('.notification-item').removeClass('unread');
                            updateNotificationCount(0);
                            $('#adminNotificationDropdown').hide();
                        }
                    })
                    .fail(function() {
                        console.error('Failed to mark all notifications as read');
                    });
            }

            // Initial load of notifications
            loadAdminNotifications();

            // Refresh dashboard every 5 minutes to get updated stats
            setInterval(function () {
                console.log("Refreshing dashboard statistics...");
                window.location.reload();
            }, 300000); // 5 minutes
        });
    </script>
</body>
</html>

@functions {
    public string GetNotificationTypeBadge(string type)
    {
        switch (type?.ToLower())
        {
            case "login":
                return "bg-success";
            case "incident":
                return "bg-danger";
            case "system":
                return "bg-info";
            case "security":
                return "bg-warning";
            case "guard":
                return "bg-primary";
            case "instructor":
                return "bg-purple";
            case "checkin":
                return "bg-teal";
            default:
                return "bg-secondary";
        }
    }
}