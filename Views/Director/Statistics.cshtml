@model PiranaSecuritySystem.ViewModels.StatisticsViewModel
@{
    ViewBag.Title = "Incident Statistics";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .card {
        transition: transform 0.2s ease-in-out;
    }

        .card:hover {
            transform: translateY(-2px);
        }

    .progress {
        background-color: #e9ecef;
    }

    .stat-card {
        min-height: 120px;
    }
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- Page Header -->
            <div class="d-sm-flex align-items-center justify-content-between mb-4">
                <h1 class="h3 mb-0 text-gray-800">Security Statistics Dashboard</h1>
                <div>
                    <a href="@Url.Action("Dashboard", "Director")" class="btn btn-secondary btn-sm">
                        <i class="fas fa-arrow-left"></i> Back to Dashboard
                    </a>
                </div>
            </div>

            <!-- Incident Statistics Cards -->
            <section class="row mb-4 g-3">
                <div class="col-xl-3 col-md-6">
                    <div class="card border-left-primary h-100 stat-card">
                        <div class="card-body">
                            <div class="d-flex align-items-center justify-content-between">
                                <div>
                                    <small class="text-primary fw-semibold text-uppercase">Total Incidents</small>
                                    <h3 class="mb-0 fw-bold">@Model.TotalIncidents</h3>
                                </div>
                                <i class="fas fa-clipboard-list fa-2x text-muted"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-6">
                    <div class="card border-left-success h-100 stat-card">
                        <div class="card-body">
                            <div class="d-flex align-items-center justify-content-between">
                                <div>
                                    <small class="text-success fw-semibold text-uppercase">Resolved</small>
                                    <h3 class="mb-0 fw-bold">@Model.ResolvedIncidents</h3>
                                    <small class="text-success">
                                        @(Model.TotalIncidents > 0 ? Math.Round((double)Model.ResolvedIncidents / Model.TotalIncidents * 100, 1) : 0)% resolution rate
                                    </small>
                                </div>
                                <i class="fas fa-check-circle fa-2x text-muted"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-6">
                    <div class="card border-left-warning h-100 stat-card">
                        <div class="card-body">
                            <div class="d-flex align-items-center justify-content-between">
                                <div>
                                    <small class="text-warning fw-semibold text-uppercase">Pending</small>
                                    <h3 class="mb-0 fw-bold">@Model.PendingIncidents</h3>
                                </div>
                                <i class="fas fa-clock fa-2x text-muted"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-6">
                    <div class="card border-left-info h-100 stat-card">
                        <div class="card-body">
                            <div class="d-flex align-items-center justify-content-between">
                                <div>
                                    <small class="text-info fw-semibold text-uppercase">In Progress</small>
                                    <h3 class="mb-0 fw-bold">@Model.InProgressIncidents</h3>
                                </div>
                                <i class="fas fa-spinner fa-2x text-muted"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Priority Statistics -->
            <section class="row mb-4 g-3">
                <div class="col-xl-3 col-md-6">
                    <div class="card border-left-danger h-100 stat-card">
                        <div class="card-body">
                            <div class="d-flex align-items-center justify-content-between">
                                <div>
                                    <small class="text-danger fw-semibold text-uppercase">Critical Priority</small>
                                    <h3 class="mb-0 fw-bold">@Model.CriticalPriorityIncidents</h3>
                                </div>
                                <i class="fas fa-exclamation-triangle fa-2x text-muted"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-6">
                    <div class="card border-left-warning h-100 stat-card">
                        <div class="card-body">
                            <div class="d-flex align-items-center justify-content-between">
                                <div>
                                    <small class="text-warning fw-semibold text-uppercase">High Priority</small>
                                    <h3 class="mb-0 fw-bold">@Model.HighPriorityIncidents</h3>
                                </div>
                                <i class="fas fa-exclamation-circle fa-2x text-muted"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-6">
                    <div class="card border-left-secondary h-100 stat-card">
                        <div class="card-body">
                            <div class="d-flex align-items-center justify-content-between">
                                <div>
                                    <small class="text-secondary fw-semibold text-uppercase">Urgent Incidents</small>
                                    <h3 class="mb-0 fw-bold">@(Model.CriticalPriorityIncidents + Model.HighPriorityIncidents)</h3>
                                    <small class="text-muted">Critical + High priority</small>
                                </div>
                                <i class="fas fa-ambulance fa-2x text-muted"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-6">
                    <div class="card border-left-success h-100 stat-card">
                        <div class="card-body">
                            <div class="d-flex align-items-center justify-content-between">
                                <div>
                                    <small class="text-success fw-semibold text-uppercase">Avg Resolution</small>
                                    <h3 class="mb-0 fw-bold">@Math.Round(Model.AverageResolutionTime, 1)d</h3>
                                    <small class="text-muted">Average days to resolve</small>
                                </div>
                                <i class="fas fa-clock fa-2x text-muted"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Guard Statistics Section -->
            <section class="row mb-4 g-3">
                <div class="col-xl-3 col-md-6">
                    <div class="card border-left-primary h-100 stat-card">
                        <div class="card-body">
                            <div class="d-flex align-items-center justify-content-between">
                                <div>
                                    <small class="text-primary fw-semibold text-uppercase">Total Guards</small>
                                    <h3 class="mb-0 fw-bold">@Model.TotalGuards</h3>
                                    <small class="text-muted">Active security personnel</small>
                                </div>
                                <i class="fas fa-shield-alt fa-2x text-muted"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-6">
                    <div class="card border-left-info h-100 stat-card">
                        <div class="card-body">
                            <div class="d-flex align-items-center justify-content-between">
                                <div>
                                    <small class="text-info fw-semibold text-uppercase">Total Check-ins</small>
                                    <h3 class="mb-0 fw-bold">@Model.TotalCheckIns</h3>
                                </div>
                                <i class="fas fa-clipboard-check fa-2x text-muted"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-6">
                    <div class="card border-left-success h-100 stat-card">
                        <div class="card-body">
                            <div class="d-flex align-items-center justify-content-between">
                                <div>
                                    <small class="text-success fw-semibold text-uppercase">Today's Check-ins</small>
                                    <h3 class="mb-0 fw-bold">@Model.TodayCheckIns</h3>
                                </div>
                                <i class="fas fa-calendar-day fa-2x text-muted"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-6">
                    <div class="card border-left-warning h-100 stat-card">
                        <div class="card-body">
                            <div class="d-flex align-items-center justify-content-between">
                                <div>
                                    <small class="text-warning fw-semibold text-uppercase">Currently On Duty</small>
                                    <h3 class="mb-0 fw-bold">@Model.CurrentOnDuty</h3>
                                </div>
                                <i class="fas fa-user-check fa-2x text-muted"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Charts and Detailed Statistics -->
            <section class="row mb-4">
                <!-- Incidents by Type -->
                <div class="col-xl-6 col-md-12 mb-4">
                    <div class="card shadow-sm h-100">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">Incidents by Type</h6>
                        </div>
                        <div class="card-body">
                            @if (Model.IncidentByType != null && Model.IncidentByType.Any())
                            {
                                <div class="table-responsive">
                                    <table class="table table-sm table-hover">
                                        <thead class="thead-light">
                                            <tr>
                                                <th>Incident Type</th>
                                                <th>Count</th>
                                                <th>Percentage</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.IncidentByType)
                                            {
                                                <tr>
                                                    <td>@item.Type</td>
                                                    <td>@item.Count</td>
                                                    <td>
                                                        <div class="progress" style="height: 20px;">
                                                            <div class="progress-bar bg-primary" role="progressbar"
                                                                 style="width: @(Model.TotalIncidents > 0 ? Math.Round((double)item.Count / Model.TotalIncidents * 100, 1) : 0)%;"
                                                                 aria-valuenow="@(Model.TotalIncidents > 0 ? Math.Round((double)item.Count / Model.TotalIncidents * 100, 1) : 0)"
                                                                 aria-valuemin="0" aria-valuemax="100">
                                                                @(Model.TotalIncidents > 0 ? Math.Round((double)item.Count / Model.TotalIncidents * 100, 1) : 0)%
                                                            </div>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-info text-center py-3">
                                    <i class="fas fa-info-circle me-2"></i>No incident type data available
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- Incidents by Status -->
                <div class="col-xl-6 col-md-12 mb-4">
                    <div class="card shadow-sm h-100">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">Incidents by Status</h6>
                        </div>
                        <div class="card-body">
                            @if (Model.IncidentByStatus != null && Model.IncidentByStatus.Any())
                            {
                                <div class="table-responsive">
                                    <table class="table table-sm table-hover">
                                        <thead class="thead-light">
                                            <tr>
                                                <th>Status</th>
                                                <th>Count</th>
                                                <th>Percentage</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.IncidentByStatus)
                                            {
                                                <tr>
                                                    <td>
                                                        <span class="badge @GetStatusBadgeClass(item.Status)">@item.Status</span>
                                                    </td>
                                                    <td>@item.Count</td>
                                                    <td>
                                                        <div class="progress" style="height: 20px;">
                                                            <div class="progress-bar @GetStatusProgressBarClass(item.Status)"
                                                                 role="progressbar"
                                                                 style="width: @(Model.TotalIncidents > 0 ? Math.Round((double)item.Count / Model.TotalIncidents * 100, 1) : 0)%;"
                                                                 aria-valuenow="@(Model.TotalIncidents > 0 ? Math.Round((double)item.Count / Model.TotalIncidents * 100, 1) : 0)"
                                                                 aria-valuemin="0" aria-valuemax="100">
                                                                @(Model.TotalIncidents > 0 ? Math.Round((double)item.Count / Model.TotalIncidents * 100, 1) : 0)%
                                                            </div>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-info text-center py-3">
                                    <i class="fas fa-info-circle me-2"></i>No status data available
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </section>

            <!-- Monthly Trends -->
            <section class="row mb-4">
                <div class="col-12">
                    <div class="card shadow-sm">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">Monthly Incident Trends - @DateTime.Now.Year</h6>
                        </div>
                        <div class="card-body">
                            @if (Model.MonthlyIncidents != null && Model.MonthlyIncidents.Any())
                            {
                                <div class="table-responsive">
                                    <table class="table table-sm table-hover">
                                        <thead class="thead-light">
                                            <tr>
                                                <th>Month</th>
                                                <th>Incident Count</th>
                                                <th>Trend</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.MonthlyIncidents)
                                            {
                                                <tr>
                                                    <td>@GetMonthName(item.Month)</td>
                                                    <td>@item.Count</td>
                                                    <td>
                                                        <div class="progress" style="height: 15px;">
                                                            <div class="progress-bar bg-info" role="progressbar"
                                                                 style="width: @(GetMonthlyPercentage(item.Count, Model.MonthlyIncidents.Max(m => m.Count)))%;"
                                                                 aria-valuenow="@item.Count"
                                                                 aria-valuemin="0"
                                                                 aria-valuemax="@Model.MonthlyIncidents.Max(m => m.Count)">
                                                                @item.Count incidents
                                                            </div>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-info text-center py-3">
                                    <i class="fas fa-info-circle me-2"></i>No monthly data available for @DateTime.Now.Year
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </section>

            <!-- Performance Metrics -->
            <section class="row">
                <div class="col-12">
                    <div class="card shadow-sm">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">Performance Metrics</h6>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4 mb-3">
                                    <div class="alert alert-success h-100">
                                        <h5><i class="fas fa-clock me-2"></i>Average Resolution Time</h5>
                                        <p class="mb-0 fs-4">@Math.Round(Model.AverageResolutionTime, 1) days</p>
                                        <small class="text-muted">Based on @Model.ResolvedIncidents resolved incidents</small>
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <div class="alert alert-primary h-100">
                                        <h5><i class="fas fa-chart-line me-2"></i>Resolution Rate</h5>
                                        <p class="mb-0 fs-4">
                                            @(Model.TotalIncidents > 0 ? Math.Round((double)Model.ResolvedIncidents / Model.TotalIncidents * 100, 1) : 0)%
                                        </p>
                                        <small class="text-muted">@Model.ResolvedIncidents out of @Model.TotalIncidents incidents resolved</small>
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <div class="alert alert-info h-100">
                                        <h5><i class="fas fa-shield-alt me-2"></i>Guard Activity Rate</h5>
                                        <p class="mb-0 fs-4">
                                            @(Model.TotalGuards > 0 ? Math.Round((double)Model.TodayCheckIns / Model.TotalGuards * 100, 0) : 0)%
                                        </p>
                                        <small class="text-muted">@Model.TodayCheckIns check-ins today from @Model.TotalGuards guards</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Add any interactive functionality here
            console.log('Statistics dashboard loaded successfully');

            // Add hover effects to cards
            const cards = document.querySelectorAll('.card');
            cards.forEach(card => {
                card.addEventListener('mouseenter', function () {
                    this.style.boxShadow = '0 4px 8px rgba(0,0,0,0.1)';
                });
                card.addEventListener('mouseleave', function () {
                    this.style.boxShadow = '';
                });
            });
        });
    </script>
}

@functions {
    public string GetStatusBadgeClass(string status)
    {
        if (string.IsNullOrEmpty(status)) return "bg-secondary";

        switch (status.ToLower())
        {
            case "resolved": return "bg-success";
            case "in progress": return "bg-primary";
            case "pending": return "bg-warning";
            default: return "bg-secondary";
        }
    }

    public string GetStatusProgressBarClass(string status)
    {
        if (string.IsNullOrEmpty(status)) return "bg-secondary";

        switch (status.ToLower())
        {
            case "resolved": return "bg-success";
            case "in progress": return "bg-primary";
            case "pending": return "bg-warning";
            default: return "bg-secondary";
        }
    }

    public string GetMonthName(int month)
    {
        try
        {
            return new DateTime(DateTime.Now.Year, month, 1).ToString("MMMM");
        }
        catch
        {
            return "Invalid Month";
        }
    }

    public double GetMonthlyPercentage(int count, int maxCount)
    {
        return maxCount > 0 ? (double)count / maxCount * 100 : 0;
    }
}