@model PiranaSecuritySystem.Models.IncidentReport
@{
    ViewBag.Title = "Incident Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Helper to get resident information
    var residentUser = ViewBag.ResidentUser as PiranaSecuritySystem.Models.ApplicationUser;
}

<div class="container-fluid">
    <!-- Page Header -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Incident Details</h1>
        <div>
            <a href="@Url.Action("Incidents", "Director")" class="btn btn-secondary btn-sm">
                <i class="fas fa-arrow-left"></i> Back to Incidents
            </a>
        </div>
    </div>

    <!-- Incident Details Card -->
    <div class="row">
        <div class="col-lg-8">
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex justify-content-between align-items-center">
                    <h6 class="m-0 font-weight-bold text-primary">Incident Information</h6>
                    <span>ID: INC-@Model.IncidentReportId.ToString("D4")</span>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="font-weight-bold">Incident Type:</label>
                                <p class="form-control-plaintext">@Model.IncidentType</p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="font-weight-bold">Current Status:</label>
                                <p class="form-control-plaintext">
                                    @{
                                        var statusClass = Model.Status == "Resolved" ? "badge-success" :
                                                        Model.Status == "In Progress" ? "badge-primary" :
                                                        Model.Status == "Pending" ? "badge-warning" : "badge-secondary";
                                    }
                                    <span class="badge @statusClass text-dark">@Model.Status</span>
                                </p>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="font-weight-bold">Report Date:</label>
                                <p class="form-control-plaintext">@Model.ReportDate.ToString("MM/dd/yyyy HH:mm")</p>
                            </div>
                        </div>
                        <div class="col-md-6">
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="font-weight-bold">Location:</label>
                        <p class="form-control-plaintext">@Model.Location</p>
                    </div>

                    <div class="form-group">
                        <label class="font-weight-bold">Description:</label>
                        <div class="border rounded p-3 bg-light">
                            @Model.Description
                        </div>
                    </div>

                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <!-- Reporter Information -->
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Reporter Information</h6>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(Model.ResidentId) && residentUser != null)
                    {
                        <div class="form-group">
                            <label class="font-weight-bold">Reporter Type:</label>
                            <p class="form-control-plaintext">Resident</p>
                        </div>
                        <div class="form-group">
                            <label class="font-weight-bold">Resident ID:</label>
                            <p class="form-control-plaintext">@Model.ResidentId</p>
                        </div>
                        <div class="form-group">
                            <label class="font-weight-bold">Full Name:</label>
                            <p class="form-control-plaintext">@residentUser.FullName</p>
                        </div>
                        <div class="form-group">
                            <label class="font-weight-bold">Email:</label>
                            <p class="form-control-plaintext">@residentUser.Email</p>
                        </div>
                        <div class="form-group">
                            <label class="font-weight-bold">Phone:</label>
                            <p class="form-control-plaintext">@residentUser.PhoneNumber</p>
                        </div>
                    }
                    else if (Model.GuardId.HasValue && Model.Guard != null)
                    {
                        <div class="form-group">
                            <label class="font-weight-bold">Reporter Type:</label>
                            <p class="form-control-plaintext">Security Guard</p>
                        </div>
                        <div class="form-group">
                            <label class="font-weight-bold">Guard ID:</label>
                            <p class="form-control-plaintext">@Model.GuardId</p>
                        </div>
                        <div class="form-group">
                            <label class="font-weight-bold">Full Name:</label>
                            <p class="form-control-plaintext">@Model.Guard.FullName</p>
                        </div>
                        <div class="form-group">
                            <label class="font-weight-bold">PSIRA Number:</label>
                            <p class="form-control-plaintext">@Model.Guard.PSIRAnumber</p>
                        </div>
                        <div class="form-group">
                            <label class="font-weight-bold">Email:</label>
                            <p class="form-control-plaintext">@Model.Guard.Email</p>
                        </div>
                        <div class="form-group">
                            <label class="font-weight-bold">Contact:</label>
                            <p class="form-control-plaintext">@Model.Guard.PhoneNumber</p>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">No reporter information available</p>
                    }
                </div>
            </div>

            <!-- Status Update Section -->
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Update Status</h6>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("UpdateIncidentStatus", "Director", FormMethod.Post, new { id = "statusForm", enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("incidentId", Model.IncidentReportId)

                        <div class="form-group">
                            <label class="font-weight-bold">New Status:</label>
                            @Html.DropDownList("status", ViewBag.StatusOptions as SelectList, new { @class = "form-control", required = "required" })
                        </div>

                        <div class="form-group">
                            <label class="font-weight-bold">Feedback/Resolution Notes (PDF):</label>
                            <div class="custom-file">
                                <input type="file" class="custom-file-input" id="pdfFile" name="pdfFile" accept=".pdf">
                                <label class="custom-file-label" for="pdfFile">Choose PDF file</label>
                            </div>
                            <small class="form-text text-muted">Max 5MB - PDF files only</small>
                        </div>

                        <button type="submit" class="btn btn-primary btn-block">
                            <i class="fas fa-save"></i> Update Status
                        </button>
                    }

                    <!-- Current Feedback Section -->
                    @if (!string.IsNullOrEmpty(Model.FeedbackAttachment))
                    {
                        <hr>
                        <div id="feedbackSection" class="mt-3">
                            <label class="font-weight-bold">Current Feedback:</label>
                            <div class="d-flex justify-content-between align-items-center">
                                <span>@Model.Feedback</span>
                                <a href="@Url.Action("DownloadFeedback", "Director", new { id = Model.IncidentReportId })"
                                   class="btn btn-sm btn-outline-primary" target="_blank">
                                    <i class="fas fa-download"></i> Download
                                </a>
                            </div>
                            @if (Model.FeedbackDate.HasValue)
                            {
                                <small class="text-muted">Updated: @Model.FeedbackDate.Value.ToString("MM/dd/yyyy HH:mm")</small>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Incident Timeline -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Incident Timeline</h6>
        </div>
        <div class="card-body">
            <div class="timeline">
                <div class="timeline-item">
                    <div class="timeline-marker bg-primary"></div>
                    <div class="timeline-content">
                        <h6 class="font-weight-bold">Incident Reported</h6>
                        <p class="text-muted">@Model.ReportDate.ToString("MM/dd/yyyy HH:mm")</p>
                        <p>
                            @if (!string.IsNullOrEmpty(Model.ResidentId) && residentUser != null)
                            {
                                <text>Incident was reported by resident <strong>@residentUser.FullName</strong> (ID: @Model.ResidentId).</text>
                            }
                            else if (Model.GuardId.HasValue && Model.Guard != null)
                            {
                                <text>Incident was reported by security guard <strong>@Model.Guard.FullName</strong> (ID: @Model.GuardId).</text>
                            }
                            else
                            {
                                <text>Incident was initially reported.</text>
                            }
                        </p>
                    </div>
                </div>

                @if (Model.FeedbackDate.HasValue)
                {
                    <div class="timeline-item">
                        <div class="timeline-marker bg-success"></div>
                        <div class="timeline-content">
                            <h6 class="font-weight-bold">Status Updated</h6>
                            <p class="text-muted">@Model.FeedbackDate.Value.ToString("MM/dd/yyyy HH:mm")</p>
                            <p>Status was changed to <span class="badge badge-success text-dark">@Model.Status</span></p>
                            @if (!string.IsNullOrEmpty(Model.Feedback))
                            {
                                <p>Feedback provided: @Model.Feedback</p>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // File input label update
            $('#pdfFile').on('change', function () {
                var fileName = $(this).val().split('\\').pop();
                $(this).next('.custom-file-label').html(fileName || 'Choose PDF file');
            });

            // Form submission with AJAX
            $('#statusForm').on('submit', function (e) {
                e.preventDefault();

                var formData = new FormData(this);

                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            showNotification('success', response.message);

                            // Update feedback section
                            if (response.hasFeedback) {
                                if (response.isPdf) {
                                    $('#feedbackSection').html(`
                                        <hr>
                                        <div class="mt-3">
                                            <label class="font-weight-bold">Current Feedback:</label>
                                            <div class="d-flex justify-content-between align-items-center">
                                                <span>${response.feedback}</span>
                                                <a href="@Url.Action("DownloadFeedback", "Director", new { id = Model.IncidentReportId })"
                                                   class="btn btn-sm btn-outline-primary" target="_blank">
                                                    <i class="fas fa-download"></i> Download
                                                </a>
                                            </div>
                                            <small class="text-muted">Updated: Just now</small>
                                        </div>
                                    `);
                                }
                            } else {
                                $('#feedbackSection').html('');
                            }

                            // Reset form
                            $('#statusForm')[0].reset();
                            $('.custom-file-label').html('Choose PDF file');

                        } else {
                            showNotification('error', response.message);
                        }
                    },
                    error: function () {
                        showNotification('error', 'An error occurred while updating the status.');
                    }
                });
            });

            function showNotification(type, message) {
                // You can use Toastr or any other notification library here
                alert(type.toUpperCase() + ': ' + message);
            }
        });
    </script>
}

<style>
    .timeline {
        position: relative;
        padding-left: 30px;
    }

    .timeline-item {
        position: relative;
        margin-bottom: 20px;
    }

    .timeline-marker {
        position: absolute;
        left: -30px;
        top: 0;
        width: 20px;
        height: 20px;
        border-radius: 50%;
        text-align: center;
        line-height: 20px;
        color: white;
    }

    .timeline-content {
        margin-left: 10px;
    }

    .form-control-plaintext {
        background-color: #f8f9fa;
        padding: 0.375rem 0.75rem;
        border-radius: 0.25rem;
    }
</style>