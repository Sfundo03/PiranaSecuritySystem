@model PiranaSecuritSystem.Models.Shift

@{
    ViewBag.Title = "Generate Roster";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Generate Roster</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger">
        @ViewBag.ErrorMessage
    </div>
}

@using (Html.BeginForm("Create", "Shifts", FormMethod.Post, new { id = "rosterForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Select guards and date range to generate a roster:</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="control-label col-md-2">Guards</label>
            <div class="col-md-10">
                @if (ViewBag.Guards != null)
                {
                    @Html.ListBox("SelectedGuardIDs", (SelectList)ViewBag.Guards, new { @class = "form-control", size = 8, required = "required" })
                }
                else
                {
                    <p class="text-danger">No guards available. Please add guards first.</p>
                }
                @Html.ValidationMessage("SelectedGuardIDs", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Start Date</label>
            <div class="col-md-10">
                <input type="date" name="startDate" class="form-control"
                       value="@DateTime.Today.ToString("yyyy-MM-dd")"
                       min="@DateTime.Today.ToString("yyyy-MM-dd")"
                       max="@ViewBag.MaxDate" required
                       onchange="updateEndDateMin()" id="startDate" />
                @Html.ValidationMessage("startDate", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">End Date</label>
            <div class="col-md-10">
                <input type="date" name="endDate" class="form-control"
                       value="@DateTime.Today.AddDays(30).ToString("yyyy-MM-dd")"
                       min="@DateTime.Today.ToString("yyyy-MM-dd")"
                       max="@ViewBag.MaxDate" required id="endDate" />
                @Html.ValidationMessage("endDate", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Generate Roster" class="btn btn-success" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
                @Html.ActionLink("Delete All Shifts", "DeleteAllShifts", null,
                     new { @class = "btn btn-danger", onclick = "return confirm('Are you sure you want to delete ALL shifts? This action cannot be undone.');" })

                @if (ViewBag.NeedsDatabaseUpdate == true)
                {
                    <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#databaseModal">
                        Update Database Schema
                    </button>
                }
            </div>
        </div>
    </div>
}

<!-- Database Update Modal -->
<div class="modal fade" id="databaseModal" tabindex="-1" role="dialog" aria-labelledby="databaseModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="databaseModalLabel">Update Database Schema</h4>
            </div>
            <div class="modal-body">
                <p>This will alter the ShiftDate column in the database to use the datetime2 type instead of datetime.</p>
                <p class="text-warning"><strong>Warning:</strong> Make sure to backup your database before proceeding.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                @using (Html.BeginForm("UpdateDatabase", "Shifts", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-warning">Update Database</button>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function updateEndDateMin() {
            var startDate = document.getElementById('startDate').value;
            var endDateInput = document.getElementById('endDate');

            if (startDate) {
                endDateInput.min = startDate;

                if (endDateInput.value < startDate) {
                    endDateInput.value = startDate;
                }
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            updateEndDateMin();

            document.getElementById('rosterForm').addEventListener('submit', function (e) {
                var startDate = new Date(document.getElementById('startDate').value);
                var endDate = new Date(document.getElementById('endDate').value);

                if (startDate > endDate) {
                    e.preventDefault();
                    alert('End date must be after start date.');
                    return false;
                }

                if (startDate < new Date()) {
                    e.preventDefault();
                    alert('Cannot create shifts for past dates.');
                    return false;
                }
            });
        });
    </script>
}