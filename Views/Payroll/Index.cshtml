@model IEnumerable<PiranaSecuritySystem.Models.Payroll>
@{
    ViewBag.Title = "Payroll Records";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PIRANA GUARDING - Payroll Records</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-blue: #0069aa;
            --secondary-blue: #004a7c;
            --accent-orange: #f26522;
            --light-bg: #f8f9fa;
            --dark-text: #333333;
            --light-text: #6c757d;
            --border-color: #dee2e6;
        }

        body {
            background-color: var(--light-bg);
            min-height: 100vh;
            font-family: 'Roboto', sans-serif;
            padding: 20px 0;
            color: var(--dark-text);
        }

        .dashboard-container {
            max-width: 1400px;
            margin: 0 auto;
        }

        .dashboard-card {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08);
            overflow: hidden;
            margin-bottom: 25px;
            border: 1px solid var(--border-color);
        }

        .card-header-custom {
            background: white;
            color: var(--primary-blue);
            padding: 20px;
            border-bottom: 2px solid var(--primary-blue);
        }

        .stats-card {
            border-radius: 8px;
            overflow: hidden;
            border: none;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
        }

        .btn-custom {
            background: var(--primary-blue);
            border: none;
            padding: 12px 20px;
            border-radius: 4px;
            font-weight: 500;
            transition: all 0.3s;
            color: white;
        }

            .btn-custom:hover {
                background: var(--secondary-blue);
                color: white;
            }

        .btn-outline-custom {
            background: transparent;
            border: 1px solid var(--primary-blue);
            color: var(--primary-blue);
            padding: 10px 20px;
            border-radius: 4px;
            font-weight: 500;
            transition: all 0.3s;
        }

            .btn-outline-custom:hover {
                background: var(--primary-blue);
                color: white;
            }

        .alert-custom {
            border-radius: 4px;
            border: none;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
        }

        h2, h4, h5 {
            color: var(--primary-blue);
        }

        .welcome-section {
            background: #e8f4ff;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 25px;
            border-left: 4px solid var(--primary-blue);
        }

        /* Table Styles */
        .table-container {
            overflow-x: auto;
        }

        .table-custom {
            border-collapse: separate;
            border-spacing: 0;
            width: 100%;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
        }

            .table-custom th {
                background-color: var(--primary-blue);
                color: white;
                padding: 15px;
                font-weight: 500;
                text-align: left;
            }

            .table-custom td {
                padding: 15px;
                border-bottom: 1px solid var(--border-color);
                vertical-align: middle;
            }

            .table-custom tr:last-child td {
                border-bottom: none;
            }

            .table-custom tr:hover {
                background-color: #f8f9fa;
            }

        .status-badge {
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 500;
        }

        .status-paid {
            background-color: #d4edda;
            color: #155724;
        }

        .status-pending {
            background-color: #fff3cd;
            color: #856404;
        }

        .status-processing {
            background-color: #cce5ff;
            color: #004085;
        }

        .action-links a {
            color: var(--primary-blue);
            margin-right: 10px;
            transition: all 0.2s;
        }

            .action-links a:hover {
                color: var(--secondary-blue);
                text-decoration: underline;
            }

        /* Action buttons */
        .action-buttons {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }

        /* Financial highlights */
        .financial-highlights {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        .highlight-card {
            background: white;
            border-radius: 8px;
            padding: 15px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
            flex: 1;
            min-width: 200px;
            text-align: center;
        }

            .highlight-card h5 {
                font-size: 1rem;
                margin-bottom: 10px;
                color: var(--primary-blue);
            }

            .highlight-card .amount {
                font-size: 1.5rem;
                font-weight: 600;
                color: var(--dark-text);
            }

        /* Success/Error Messages */
        .alert-success {
            background-color: #d4edda;
            border-color: #c3e6cb;
            color: #155724;
        }

        .alert-danger {
            background-color: #f8d7da;
            border-color: #f5c6cb;
            color: #721c24;
        }

        /* Responsive adjustments */
        @@media (max-width: 768px) {
            .financial-highlights {
                flex-direction: column;
            }

            .action-buttons {
                flex-direction: column;
            }

            .btn-custom, .btn-outline-custom {
                width: 100%;
                margin-bottom: 10px;
            }

            .table-container {
                overflow-x: auto;
            }

            .table-custom {
                min-width: 800px;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <!-- Page Header -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h1 class="h3 mb-1"><i class="fas fa-money-check me-2"></i>Payroll Records</h1>
                <p class="text-muted">Manage and review payroll information</p>
            </div>
        </div>

        <!-- Success/Error Messages -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="dashboard-card">
            <div class="card-header-custom">
                <div class="d-flex justify-content-between align-items-center">
                    <h2 class="mb-0"><i class="fas fa-list me-2"></i>All Payroll Records</h2>
                    <div>
                        <span class="badge bg-light text-dark">
                            <i class="fas fa-sync-alt me-1"></i>Last updated: @DateTime.Now.ToString("hh:mm tt")
                        </span>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <!-- Action Buttons -->
                <div class="action-buttons">
                    @Html.ActionLink("Generate New Payroll", "Generate", null, new { @class = "btn btn-custom" })
                    @Html.ActionLink("Manage Rates", "ManageRates", null, new { @class = "btn btn-outline-custom" })
                    @Html.ActionLink("Tax Configuration", "TaxConfig", null, new { @class = "btn btn-outline-custom" })
                </div>

                <!-- Financial Highlights -->
                <div class="financial-highlights">
                    <div class="highlight-card">
                        <h5><i class="fas fa-receipt me-2"></i>Total Records</h5>
                        <div class="amount">@Model.Count()</div>
                    </div>
                    <div class="highlight-card">
                        <h5><i class="fas fa-money-bill-wave me-2"></i>Total Paid</h5>
                        <div class="amount">@String.Format("{0:C}", Model.Where(p => p.Status == "Paid").Sum(p => p.NetPay))</div>
                    </div>
                    <div class="highlight-card">
                        <h5><i class="fas fa-clock me-2"></i>Pending</h5>
                        <div class="amount">@Model.Count(p => p.Status == "Pending")</div>
                    </div>
                </div>

                <!-- Payroll Table -->
                <div class="table-container">
                    <table class="table-custom">
                        <thead>
                            <tr>
                                <th>Guard Name</th>
                                <th>Pay Period</th>
                                <th>Total Hours</th>
                                <th>Hourly Rate</th>
                                <th>Gross Pay</th>
                                <th>Tax</th>
                                <th>Net Pay</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.Guard.FullName)</td>
                                    <td>@item.PayPeriodStart.ToString("yyyy-MM-dd") to @item.PayPeriodEnd.ToString("yyyy-MM-dd")</td>
                                    <td>@Html.DisplayFor(modelItem => item.TotalHours)</td>
                                    <td>@String.Format("{0:C}", item.HourlyRate)</td>
                                    <td>@String.Format("{0:C}", item.GrossPay)</td>
                                    <td>@String.Format("{0:C}", item.TaxAmount)</td>
                                    <td>@String.Format("{0:C}", item.NetPay)</td>
                                    <td>
                                        @{
                                            string statusClass = "";
                                            switch (item.Status)
                                            {
                                                case "Paid":
                                                    statusClass = "status-paid";
                                                    break;
                                                case "Pending":
                                                    statusClass = "status-pending";
                                                    break;
                                                case "Processing":
                                                    statusClass = "status-processing";
                                                    break;
                                                default:
                                                    statusClass = "status-pending";
                                                    break;
                                            }
                                        }
                                        <span class="status-badge @statusClass">@Html.DisplayFor(modelItem => item.Status)</span>
                                    </td>
                                    <td class="action-links">
                                        @Html.ActionLink("Details", "Details", new { id = item.PayrollId }, new { @class = "text-primary" })
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                @if (!Model.Any())
                {
                    <div class="text-center py-4">
                        <i class="fas fa-file-invoice-dollar fa-3x text-muted mb-3"></i>
                        <h4 class="text-muted">No payroll records found</h4>
                        <p>Generate your first payroll record to get started</p>
                        @Html.ActionLink("Generate Payroll", "Generate", null, new { @class = "btn btn-custom mt-2" })
                    </div>
                }
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            console.log("Payroll records page loaded");

            // Auto-dismiss alerts after 5 seconds
            setTimeout(function () {
                const alerts = document.querySelectorAll('.alert');
                alerts.forEach(function (alert) {
                    const bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                });
            }, 5000);

            // Auto-refresh page every 5 minutes to get updated data
            setInterval(function () {
                console.log("Refreshing payroll data...");
                window.location.reload();
            }, 300000); // 5 minutes
        });
    </script>
</body>
</html>