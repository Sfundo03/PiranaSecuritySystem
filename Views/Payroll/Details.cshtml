@model PiranaSecuritySystem.Models.Payroll
@{
    ViewBag.Title = "Payroll Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PIRANA GUARDING - Payroll Details</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-blue: #0069aa;
            --secondary-blue: #004a7c;
            --accent-orange: #f26522;
            --light-bg: #f8f9fa;
            --dark-text: #333333;
            --light-text: #6c757d;
            --border-color: #dee2e6;
        }

        body {
            background-color: var(--light-bg);
            min-height: 100vh;
            font-family: 'Roboto', sans-serif;
            padding: 20px 0;
            color: var(--dark-text);
        }

        .dashboard-container {
            max-width: 1200px;
            margin: 0 auto;
        }

        .dashboard-card {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08);
            overflow: hidden;
            margin-bottom: 25px;
            border: 1px solid var(--border-color);
        }

        .card-header-custom {
            background: white;
            color: var(--primary-blue);
            padding: 20px;
            border-bottom: 2px solid var(--primary-blue);
        }

        .btn-custom {
            background: var(--primary-blue);
            border: none;
            padding: 12px 20px;
            border-radius: 4px;
            font-weight: 500;
            transition: all 0.3s;
            color: white;
        }

            .btn-custom:hover {
                background: var(--secondary-blue);
                color: white;
            }

        .btn-outline-custom {
            background: transparent;
            border: 1px solid var(--primary-blue);
            color: var(--primary-blue);
            padding: 10px 20px;
            border-radius: 4px;
            font-weight: 500;
            transition: all 0.3s;
        }

            .btn-outline-custom:hover {
                background: var(--primary-blue);
                color: white;
            }

        .btn-danger-custom {
            background: #dc3545;
            border: none;
            padding: 12px 20px;
            border-radius: 4px;
            font-weight: 500;
            transition: all 0.3s;
            color: white;
        }

            .btn-danger-custom:hover {
                background: #c82333;
                color: white;
            }

        h2, h4, h5 {
            color: var(--primary-blue);
        }

        .details-container {
            padding: 25px;
        }

        .details-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }

        .detail-item {
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid var(--border-color);
        }

        .detail-label {
            font-weight: 600;
            color: var(--primary-blue);
            margin-bottom: 5px;
            font-size: 0.9rem;
        }

        .detail-value {
            font-size: 1.1rem;
            color: var(--dark-text);
        }

        .financial-highlight {
            background-color: #e8f4ff;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .status-badge {
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: 500;
            display: inline-block;
        }

        .status-paid {
            background-color: #d4edda;
            color: #155724;
        }

        .status-pending {
            background-color: #fff3cd;
            color: #856404;
        }

        .status-processing {
            background-color: #cce5ff;
            color: #004085;
        }

        .action-links {
            margin-top: 25px;
            padding-top: 20px;
            border-top: 1px solid var(--border-color);
        }

        .back-link {
            display: inline-block;
            margin-top: 20px;
            color: var(--primary-blue);
            text-decoration: none;
            font-weight: 500;
            transition: all 0.2s;
        }

            .back-link:hover {
                color: var(--secondary-blue);
                text-decoration: underline;
            }

        /* Attendance Table Styles */
        .attendance-table {
            width: 100%;
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }

            .attendance-table th {
                background-color: var(--primary-blue);
                color: white;
                font-weight: 500;
                padding: 12px 15px;
                text-align: left;
            }

            .attendance-table td {
                padding: 12px 15px;
                border-bottom: 1px solid var(--border-color);
            }

            .attendance-table tr:hover {
                background-color: #f8f9fa;
            }

        .hours-badge {
            background-color: #e8f5e8;
            color: #2d5016;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .no-data {
            text-align: center;
            padding: 40px;
            color: var(--light-text);
        }

            .no-data i {
                font-size: 3rem;
                margin-bottom: 15px;
                color: #dee2e6;
            }

        /* Summary Cards */
        .summary-card {
            background: linear-gradient(135deg, var(--primary-blue), var(--secondary-blue));
            color: white;
            padding: 20px;
            border-radius: 8px;
            text-align: center;
            margin-bottom: 20px;
        }

            .summary-card .number {
                font-size: 2rem;
                font-weight: 700;
                margin-bottom: 5px;
            }

            .summary-card .label {
                font-size: 0.9rem;
                opacity: 0.9;
            }

        /* Delete confirmation modal */
        .modal-content {
            border-radius: 8px;
            border: none;
        }

        .modal-header {
            background-color: var(--primary-blue);
            color: white;
            border-bottom: 2px solid var(--secondary-blue);
        }

        /* Responsive adjustments */
        @@media (max-width: 768px) {
            .details-grid {
                grid-template-columns: 1fr;
            }

            .details-container {
                padding: 15px;
            }

            .attendance-table {
                font-size: 0.9rem;
            }

                .attendance-table th,
                .attendance-table td {
                    padding: 8px 10px;
                }
        }

        @@media (max-width: 576px) {
            .attendance-table {
                display: block;
                overflow-x: auto;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <!-- Page Header -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h1 class="h3 mb-1"><i class="fas fa-file-invoice-dollar me-2"></i>Payroll Details</h1>
                <p class="text-muted">Detailed view of payroll information and attendance records</p>
            </div>
        </div>

        <!-- Payroll Information Card -->
        <div class="dashboard-card">
            <div class="card-header-custom">
                <div class="d-flex justify-content-between align-items-center">
                    <h2 class="mb-0"><i class="fas fa-info-circle me-2"></i>Payroll Record</h2>
                    <div>
                        @{
                            string statusClass = "";
                            switch (Model.Status)
                            {
                                case "Paid":
                                    statusClass = "status-paid";
                                    break;
                                case "Pending":
                                    statusClass = "status-pending";
                                    break;
                                case "Processed":
                                case "Processing":
                                    statusClass = "status-processing";
                                    break;
                                default:
                                    statusClass = "status-pending";
                                    break;
                            }
                        }
                        <span class="status-badge @statusClass">@Html.DisplayFor(model => model.Status)</span>
                    </div>
                </div>
            </div>

            <div class="details-container">
                <!-- Financial Summary -->
                <div class="financial-highlight">
                    <div class="row">
                        <div class="col-md-3 text-center">
                            <div class="detail-label">Gross Pay</div>
                            <div class="detail-value fw-bold text-primary">R @Model.GrossPay.ToString("F2")</div>
                        </div>
                        <div class="col-md-3 text-center">
                            <div class="detail-label">Tax Amount</div>
                            <div class="detail-value fw-bold text-danger">R @Model.TaxAmount.ToString("F2")</div>
                        </div>
                        <div class="col-md-3 text-center">
                            <div class="detail-label">Tax Rate</div>
                            <div class="detail-value fw-bold text-info">@Model.TaxPercentageApplied.ToString("F1")%</div>
                        </div>
                        <div class="col-md-3 text-center">
                            <div class="detail-label">Net Pay</div>
                            <div class="detail-value fw-bold text-success">R @Model.NetPay.ToString("F2")</div>
                        </div>
                    </div>
                </div>

                <!-- Details Grid -->
                <div class="details-grid">
                    <div class="detail-item">
                        <div class="detail-label"><i class="fas fa-user-shield me-2"></i>Guard Name</div>
                        <div class="detail-value">@Html.DisplayFor(model => model.Guard.FullName)</div>
                    </div>

                    <div class="detail-item">
                        <div class="detail-label"><i class="fas fa-calendar-alt me-2"></i>Pay Period</div>
                        <div class="detail-value">@Model.PayPeriodStart.ToString("MMM dd, yyyy") to @Model.PayPeriodEnd.ToString("MMM dd, yyyy")</div>
                    </div>

                    <div class="detail-item">
                        <div class="detail-label"><i class="fas fa-clock me-2"></i>Total Hours</div>
                        <div class="detail-value">@Model.TotalHours.ToString("F2") hours</div>
                    </div>

                    <div class="detail-item">
                        <div class="detail-label"><i class="fas fa-money-bill-wave me-2"></i>Hourly Rate</div>
                        <div class="detail-value">R @Model.HourlyRate.ToString("F2")</div>
                    </div>

                    <div class="detail-item">
                        <div class="detail-label"><i class="fas fa-calendar-day me-2"></i>Pay Date</div>
                        <div class="detail-value">@Model.PayDate.ToString("MMM dd, yyyy")</div>
                    </div>

                    <div class="detail-item">
                        <div class="detail-label"><i class="fas fa-credit-card me-2"></i>Payment Method</div>
                        <div class="detail-value">
                            @if (!string.IsNullOrEmpty(Model.PaymentMethod))
                            {
                                @Html.DisplayFor(model => model.PaymentMethod)
                            }
                            else
                            {
                                <span class="text-muted">Not specified</span>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Attendance Records Card -->
        <div class="dashboard-card">
            <div class="card-header-custom">
                <div class="d-flex justify-content-between align-items-center">
                    <h2 class="mb-0"><i class="fas fa-clipboard-list me-2"></i>Attendance Records</h2>
                    <div class="text-muted">
                        @if (ViewBag.AttendanceRecords != null)
                        {
                            <span>@ViewBag.AttendanceRecords.Count records found</span>
                        }
                    </div>
                </div>
            </div>

            <div class="details-container">
                @if (ViewBag.AttendanceRecords != null && ViewBag.AttendanceRecords.Count > 0)
                {
                    <div class="table-responsive">
                        <table class="attendance-table">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Check-In Time</th>
                                    <th>Check-Out Time</th>
                                    <th>Hours Worked</th>
                                    <th>Shift Duration</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var attendance in ViewBag.AttendanceRecords)
                                {
                                    <tr>
                                        <td>@attendance.AttendanceDate.ToString("MMM dd, yyyy")</td>
                                        <td>@attendance.CheckInTime.ToString("hh:mm tt")</td>
                                        <td>
                                            @if (attendance.CheckOutTime != null)
                                            {
                                                @attendance.CheckOutTime.ToString("hh:mm tt")
                                            }
                                            else
                                            {
                                                <span class="text-muted">Not checked out</span>
                                            }
                                        </td>
                                        <td>
                                            <span class="hours-badge">@attendance.HoursWorked.ToString("F2") hours</span>
                                        </td>
                                        <td>
                                            @if (attendance.CheckOutTime != null)
                                            {
                                                var duration = attendance.CheckOutTime - attendance.CheckInTime;
                                                <span>@duration.ToString(@"hh\:mm")</span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">-</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <!-- Attendance Summary -->
                    <div class="row mt-4">
                        <div class="col-md-3">
                            <div class="summary-card">
                                <div class="number">@ViewBag.AttendanceRecords.Count</div>
                                <div class="label">Days Worked</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="summary-card" style="background: linear-gradient(135deg, #28a745, #20c997);">
                                <div class="number">@Model.TotalHours.ToString("F2")</div>
                                <div class="label">Total Hours</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="summary-card" style="background: linear-gradient(135deg, #ffc107, #fd7e14);">
                                <div class="number">R @Model.GrossPay.ToString("F2")</div>
                                <div class="label">Gross Pay</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="summary-card" style="background: linear-gradient(135deg, #17a2b8, #6f42c1);">
                                <div class="number">R @Model.NetPay.ToString("F2")</div>
                                <div class="label">Net Pay</div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="no-data">
                        <i class="fas fa-clipboard-list"></i>
                        <h4>No Attendance Records Found</h4>
                        <p>No attendance records were found for this payroll period.</p>
                        <p class="text-muted">This could be because:</p>
                        <ul class="text-muted text-start" style="display: inline-block;">
                            <li>No check-in/check-out records exist for this period</li>
                            <li>Attendance records haven't been synchronized yet</li>
                            <li>The guard didn't work during this period</li>
                        </ul>
                    </div>
                }
            </div>
        </div>

        <!-- Action Links -->
        <div class="dashboard-card">
            <div class="details-container">
                <div class="action-links text-center">
                    <a href="@Url.Action("Index")" class="btn btn-outline-custom me-2">
                        <i class="fas fa-arrow-left me-1"></i>Back to List
                    </a>
                    <button type="button" class="btn btn-custom me-2" onclick="window.print()">
                        <i class="fas fa-print me-1"></i>Print
                    </button>
                    <button type="button" class="btn btn-danger-custom" data-bs-toggle="modal" data-bs-target="#deleteModal">
                        <i class="fas fa-trash me-1"></i>Delete Payroll
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel"><i class="fas fa-exclamation-triangle me-2"></i>Confirm Delete</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this payroll record?</p>
                    <div class="alert alert-warning">
                        <strong>Warning:</strong> This action cannot be undone. The payroll record for
                        <strong>@Model.Guard.FullName</strong> for the period
                        <strong>@Model.PayPeriodStart.ToString("MMM dd, yyyy") to @Model.PayPeriodEnd.ToString("MMM dd, yyyy")</strong>
                        will be permanently deleted.
                    </div>
                    <div class="alert alert-info">
                        <strong>Note:</strong> This will only delete the payroll record, not the underlying attendance data.
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    @using (Html.BeginForm("Delete", "Payroll", new { id = Model.PayrollId }, FormMethod.Post, new { id = "deleteForm" }))
                    {
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger-custom">
                            <i class="fas fa-trash me-1"></i>Delete
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            console.log("Payroll details page loaded");

            // Handle delete form submission
            document.getElementById('deleteForm')?.addEventListener('submit', function (e) {
                e.preventDefault();

                // Show loading state
                const deleteBtn = this.querySelector('button[type="submit"]');
                const originalText = deleteBtn.innerHTML;
                deleteBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Deleting...';
                deleteBtn.disabled = true;

                // Submit the form
                this.submit();
            });

            // Auto-close modal after successful deletion (if redirected back here, it means failure)
            const urlParams = new URLSearchParams(window.location.search);
            if (urlParams.has('deleted')) {
                const deleteModal = bootstrap.Modal.getInstance(document.getElementById('deleteModal'));
                if (deleteModal) {
                    deleteModal.hide();
                }
            }
        });
    </script>
</body>
</html>